

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Feb 10 10:42:57 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1619 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011C                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  018E                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  0197                     	;# 
   127  0199                     	;# 
   128  0199                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019A                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019D                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019E                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  020E                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  028C                     	;# 
   172  028D                     	;# 
   173  028E                     	;# 
   174  0291                     	;# 
   175  0291                     	;# 
   176  0292                     	;# 
   177  0293                     	;# 
   178  0294                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029E                     	;# 
   185  030C                     	;# 
   186  030D                     	;# 
   187  030E                     	;# 
   188  038C                     	;# 
   189  038D                     	;# 
   190  038E                     	;# 
   191  0391                     	;# 
   192  0392                     	;# 
   193  0393                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0397                     	;# 
   198  0398                     	;# 
   199  0399                     	;# 
   200  040E                     	;# 
   201  0413                     	;# 
   202  0413                     	;# 
   203  0414                     	;# 
   204  0414                     	;# 
   205  0415                     	;# 
   206  0416                     	;# 
   207  0417                     	;# 
   208  0418                     	;# 
   209  041A                     	;# 
   210  041A                     	;# 
   211  041B                     	;# 
   212  041B                     	;# 
   213  041C                     	;# 
   214  041D                     	;# 
   215  041E                     	;# 
   216  041F                     	;# 
   217  0493                     	;# 
   218  0494                     	;# 
   219  0495                     	;# 
   220  0496                     	;# 
   221  049A                     	;# 
   222  049B                     	;# 
   223  049C                     	;# 
   224  049D                     	;# 
   225  058C                     	;# 
   226  058C                     	;# 
   227  058D                     	;# 
   228  058E                     	;# 
   229  058E                     	;# 
   230  058F                     	;# 
   231  0590                     	;# 
   232  0590                     	;# 
   233  0591                     	;# 
   234  0592                     	;# 
   235  0592                     	;# 
   236  0593                     	;# 
   237  0594                     	;# 
   238  0594                     	;# 
   239  0595                     	;# 
   240  0596                     	;# 
   241  0596                     	;# 
   242  0597                     	;# 
   243  0598                     	;# 
   244  0599                     	;# 
   245  059A                     	;# 
   246  059B                     	;# 
   247  059B                     	;# 
   248  059C                     	;# 
   249  059D                     	;# 
   250  060C                     	;# 
   251  060C                     	;# 
   252  060D                     	;# 
   253  060E                     	;# 
   254  060F                     	;# 
   255  060F                     	;# 
   256  0610                     	;# 
   257  0611                     	;# 
   258  0612                     	;# 
   259  0613                     	;# 
   260  0614                     	;# 
   261  0617                     	;# 
   262  0618                     	;# 
   263  0619                     	;# 
   264  061A                     	;# 
   265  061B                     	;# 
   266  061C                     	;# 
   267  0691                     	;# 
   268  0692                     	;# 
   269  0693                     	;# 
   270  0694                     	;# 
   271  0695                     	;# 
   272  0696                     	;# 
   273  0697                     	;# 
   274  0699                     	;# 
   275  069A                     	;# 
   276  0711                     	;# 
   277  0712                     	;# 
   278  0713                     	;# 
   279  0714                     	;# 
   280  0715                     	;# 
   281  0718                     	;# 
   282  0718                     	;# 
   283  0719                     	;# 
   284  071A                     	;# 
   285  071A                     	;# 
   286  071B                     	;# 
   287  071C                     	;# 
   288  071D                     	;# 
   289  0791                     	;# 
   290  0791                     	;# 
   291  0792                     	;# 
   292  0793                     	;# 
   293  0793                     	;# 
   294  0794                     	;# 
   295  0795                     	;# 
   296  0795                     	;# 
   297  0796                     	;# 
   298  0797                     	;# 
   299  0797                     	;# 
   300  0798                     	;# 
   301  0799                     	;# 
   302  079A                     	;# 
   303  080C                     	;# 
   304  080C                     	;# 
   305  080D                     	;# 
   306  080E                     	;# 
   307  080E                     	;# 
   308  080F                     	;# 
   309  0810                     	;# 
   310  0810                     	;# 
   311  0811                     	;# 
   312  0812                     	;# 
   313  0812                     	;# 
   314  0813                     	;# 
   315  0814                     	;# 
   316  0815                     	;# 
   317  0816                     	;# 
   318  0817                     	;# 
   319  0818                     	;# 
   320  0819                     	;# 
   321  081A                     	;# 
   322  081A                     	;# 
   323  081B                     	;# 
   324  081C                     	;# 
   325  081C                     	;# 
   326  081D                     	;# 
   327  088C                     	;# 
   328  088D                     	;# 
   329  088E                     	;# 
   330  088F                     	;# 
   331  088F                     	;# 
   332  0890                     	;# 
   333  0891                     	;# 
   334  0892                     	;# 
   335  0893                     	;# 
   336  0893                     	;# 
   337  0894                     	;# 
   338  0895                     	;# 
   339  0896                     	;# 
   340  0897                     	;# 
   341  0897                     	;# 
   342  0898                     	;# 
   343  0899                     	;# 
   344  0D8C                     	;# 
   345  0D8C                     	;# 
   346  0D8D                     	;# 
   347  0D8E                     	;# 
   348  0D8F                     	;# 
   349  0D8F                     	;# 
   350  0D90                     	;# 
   351  0D91                     	;# 
   352  0D92                     	;# 
   353  0D92                     	;# 
   354  0D93                     	;# 
   355  0D94                     	;# 
   356  0D95                     	;# 
   357  0D95                     	;# 
   358  0D96                     	;# 
   359  0D97                     	;# 
   360  0D98                     	;# 
   361  0D99                     	;# 
   362  0D9A                     	;# 
   363  0D9B                     	;# 
   364  0D9C                     	;# 
   365  0D9D                     	;# 
   366  0D9E                     	;# 
   367  0D9E                     	;# 
   368  0D9F                     	;# 
   369  0DA0                     	;# 
   370  0DA1                     	;# 
   371  0DA1                     	;# 
   372  0DA2                     	;# 
   373  0DA3                     	;# 
   374  0DA4                     	;# 
   375  0DA4                     	;# 
   376  0DA5                     	;# 
   377  0DA6                     	;# 
   378  0DA7                     	;# 
   379  0DA7                     	;# 
   380  0DA8                     	;# 
   381  0DA9                     	;# 
   382  0DAA                     	;# 
   383  0DAB                     	;# 
   384  0DAC                     	;# 
   385  0DAD                     	;# 
   386  0DAE                     	;# 
   387  0DAF                     	;# 
   388  0E0F                     	;# 
   389  0E10                     	;# 
   390  0E11                     	;# 
   391  0E12                     	;# 
   392  0E13                     	;# 
   393  0E14                     	;# 
   394  0E15                     	;# 
   395  0E16                     	;# 
   396  0E17                     	;# 
   397  0E18                     	;# 
   398  0E19                     	;# 
   399  0E1A                     	;# 
   400  0E1B                     	;# 
   401  0E1C                     	;# 
   402  0E1D                     	;# 
   403  0E1E                     	;# 
   404  0E1F                     	;# 
   405  0E20                     	;# 
   406  0E21                     	;# 
   407  0E22                     	;# 
   408  0E23                     	;# 
   409  0E24                     	;# 
   410  0E25                     	;# 
   411  0E26                     	;# 
   412  0E27                     	;# 
   413  0E28                     	;# 
   414  0E29                     	;# 
   415  0E2A                     	;# 
   416  0E2B                     	;# 
   417  0E2C                     	;# 
   418  0E2D                     	;# 
   419  0E2E                     	;# 
   420  0E90                     	;# 
   421  0E91                     	;# 
   422  0E92                     	;# 
   423  0E94                     	;# 
   424  0E95                     	;# 
   425  0E9C                     	;# 
   426  0E9D                     	;# 
   427  0E9E                     	;# 
   428  0E9F                     	;# 
   429  0EA0                     	;# 
   430  0EA1                     	;# 
   431  0EA2                     	;# 
   432  0EA3                     	;# 
   433  0EA4                     	;# 
   434  0EA5                     	;# 
   435  0EA6                     	;# 
   436  0EA7                     	;# 
   437  0F0F                     	;# 
   438  0F10                     	;# 
   439  0F11                     	;# 
   440  0F12                     	;# 
   441  0F13                     	;# 
   442  0F14                     	;# 
   443  0F15                     	;# 
   444  0F16                     	;# 
   445  0F17                     	;# 
   446  0F18                     	;# 
   447  0F19                     	;# 
   448  0F1A                     	;# 
   449  0F1B                     	;# 
   450  0F1C                     	;# 
   451  0F1D                     	;# 
   452  0F1E                     	;# 
   453  0F1F                     	;# 
   454  0F20                     	;# 
   455  0F21                     	;# 
   456  0F22                     	;# 
   457  0F23                     	;# 
   458  0F24                     	;# 
   459  0F25                     	;# 
   460  0F26                     	;# 
   461  0F27                     	;# 
   462  0F28                     	;# 
   463  0F29                     	;# 
   464  0F2A                     	;# 
   465  0F2B                     	;# 
   466  0F2C                     	;# 
   467  0F2D                     	;# 
   468  0F2E                     	;# 
   469  0F2F                     	;# 
   470  0F30                     	;# 
   471  0F31                     	;# 
   472  0F32                     	;# 
   473  0F33                     	;# 
   474  0F34                     	;# 
   475  0F35                     	;# 
   476  0F36                     	;# 
   477  0F37                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489                           
   490                           	psect	cinit
   491  07F6                     start_initialization:	
   492                           ; #config settings
   493                           
   494  07F6                     __initialization:	
   495                           
   496                           ; Clear objects allocated to BANK0
   497  07F6  3047               	movlw	low __pbssBANK0
   498  07F7  0084               	movwf	4
   499  07F8  3000               	movlw	high __pbssBANK0
   500  07F9  0085               	movwf	5
   501  07FA  3014               	movlw	20
   502  07FB  3186  26BC         	fcall	clear_ram0
   503  07FD                     end_of_initialization:	
   504                           ;End of C runtime variable initialization code
   505                           
   506  07FD                     __end_of__initialization:	
   507  07FD  0020               	movlb	0
   508  07FE  3186  2EDD         	ljmp	_main	;jump to C main() function
   509                           
   510                           	psect	bssBANK0
   511  0047                     __pbssBANK0:	
   512  0047                     CalcError@F12175:	
   513  0047                     	ds	16
   514  0057                     CalcError@integral:	
   515  0057                     	ds	2
   516  0059                     CalcError@_proportional:	
   517  0059                     	ds	2
   518                           
   519                           	psect	clrtext
   520  06BC                     clear_ram0:	
   521                           ;	Called with FSR0 containing the base address, and
   522                           ;	WREG with the size to clear
   523                           
   524  06BC  0064               	clrwdt	;clear the watchdog before getting into this loop
   525  06BD                     clrloop0:	
   526  06BD  0180               	clrf	0	;clear RAM location pointed to by FSR
   527  06BE  3101               	addfsr 0,1
   528  06BF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   529  06C0  2EBD               	goto	clrloop0	;have we reached the end yet?
   530  06C1  3400               	retlw	0	;all done for this memory range, return
   531                           
   532                           	psect	cstackCOMMON
   533  0070                     __pcstackCOMMON:	
   534  0070                     ?_main:	
   535  0070                     ?___wmul:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?___lwdiv:	
   539                           ; 2 bytes @ 0x0
   540                           
   541  0070                     ___wmul@multiplier:	
   542                           ; 2 bytes @ 0x0
   543                           
   544  0070                     ___lwdiv@divisor:	
   545                           ; 2 bytes @ 0x0
   546                           
   547                           
   548                           ; 2 bytes @ 0x0
   549  0070                     	ds	2
   550  0072                     ___wmul@multiplicand:	
   551  0072                     ___lwdiv@dividend:	
   552                           ; 2 bytes @ 0x2
   553                           
   554                           
   555                           ; 2 bytes @ 0x2
   556  0072                     	ds	2
   557  0074                     ??___wmul:	
   558  0074                     ??___lwdiv:	
   559                           ; 1 bytes @ 0x4
   560                           
   561  0074                     ___wmul@product:	
   562                           ; 1 bytes @ 0x4
   563                           
   564                           
   565                           ; 2 bytes @ 0x4
   566  0074                     	ds	1
   567  0075                     ___lwdiv@quotient:	
   568                           
   569                           ; 2 bytes @ 0x5
   570  0075                     	ds	2
   571  0077                     ___lwdiv@counter:	
   572                           
   573                           ; 1 bytes @ 0x7
   574  0077                     	ds	1
   575  0078                     ??_CalcError:	
   576                           
   577                           ; 1 bytes @ 0x8
   578  0078                     	ds	2
   579  007A                     ??_main:	
   580  007A                     main@asdf:	
   581                           ; 1 bytes @ 0xA
   582                           
   583                           
   584                           ; 2 bytes @ 0xA
   585  007A                     	ds	2
   586                           
   587                           	psect	cstackBANK0
   588  0020                     __pcstackBANK0:	
   589  0020                     ?_CalcError:	
   590  0020                     CalcError@Kp:	
   591                           ; 2 bytes @ 0x0
   592                           
   593                           
   594                           ; 2 bytes @ 0x0
   595  0020                     	ds	2
   596  0022                     CalcError@Ki:	
   597                           
   598                           ; 2 bytes @ 0x2
   599  0022                     	ds	2
   600  0024                     CalcError@Kd:	
   601                           
   602                           ; 2 bytes @ 0x4
   603  0024                     	ds	2
   604  0026                     CalcError@DIVIDER:	
   605                           
   606                           ; 2 bytes @ 0x6
   607  0026                     	ds	2
   608  0028                     CalcError@sensors:	
   609                           
   610                           ; 16 bytes @ 0x8
   611  0028                     	ds	16
   612  0038                     CalcError@position:	
   613                           
   614                           ; 2 bytes @ 0x18
   615  0038                     	ds	2
   616  003A                     CalcError@differential:	
   617                           
   618                           ; 2 bytes @ 0x1A
   619  003A                     	ds	2
   620  003C                     CalcError@error:	
   621                           
   622                           ; 2 bytes @ 0x1C
   623  003C                     	ds	2
   624  003E                     CalcError@meanSum:	
   625                           
   626                           ; 2 bytes @ 0x1E
   627  003E                     	ds	2
   628  0040                     CalcError@sum:	
   629                           
   630                           ; 2 bytes @ 0x20
   631  0040                     	ds	2
   632  0042                     _CalcError$328:	
   633                           
   634                           ; 2 bytes @ 0x22
   635  0042                     	ds	2
   636  0044                     CalcError@proportional:	
   637                           
   638                           ; 2 bytes @ 0x24
   639  0044                     	ds	2
   640  0046                     CalcError@i:	
   641                           
   642                           ; 1 bytes @ 0x26
   643  0046                     	ds	1
   644                           
   645                           	psect	maintext
   646  06DD                     __pmaintext:	
   647 ;;
   648 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   649 ;;
   650 ;; *************** function _main *****************
   651 ;; Defined at:
   652 ;;		line 19 in file "main.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  asdf            2   10[COMMON] int 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : B1F/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   667 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   669 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   670 ;;Total ram usage:        2 bytes
   671 ;; Hardware stack levels required when called:    2
   672 ;; This function calls:
   673 ;;		_CalcError
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _main
   681  06DD                     _main:	
   682  06DD                     l5:	
   683                           ;incstack = 0
   684                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   685                           ;main.c: 21: for(;;){
   686                           
   687                           
   688                           ;main.c: 22: int asdf = 0;
   689  06DD  01FA               	clrf	main@asdf
   690  06DE  01FB               	clrf	main@asdf+1
   691                           
   692                           ;main.c: 23: asdf = CalcError(1,1,1,1000);
   693  06DF  3001               	movlw	1
   694  06E0  0020               	movlb	0	; select bank0
   695  06E1  00A0               	movwf	CalcError@Kp
   696  06E2  3000               	movlw	0
   697  06E3  00A1               	movwf	CalcError@Kp+1
   698  06E4  3001               	movlw	1
   699  06E5  00A2               	movwf	CalcError@Ki
   700  06E6  3000               	movlw	0
   701  06E7  00A3               	movwf	CalcError@Ki+1
   702  06E8  3001               	movlw	1
   703  06E9  00A4               	movwf	CalcError@Kd
   704  06EA  3000               	movlw	0
   705  06EB  00A5               	movwf	CalcError@Kd+1
   706  06EC  30E8               	movlw	232
   707  06ED  00A6               	movwf	CalcError@DIVIDER
   708  06EE  3003               	movlw	3
   709  06EF  00A7               	movwf	CalcError@DIVIDER+1
   710  06F0  3187  272D  3186   	fcall	_CalcError
   711  06F3  0020               	movlb	0	; select bank0
   712  06F4  0821               	movf	?_CalcError+1,w
   713  06F5  00FB               	movwf	main@asdf+1
   714  06F6  0820               	movf	?_CalcError,w
   715  06F7  00FA               	movwf	main@asdf
   716                           
   717                           ;main.c: 24: }
   718  06F8  2EDD               	goto	l5
   719  06F9                     __end_of_main:	
   720                           
   721                           	psect	text1
   722  072D                     __ptext1:	
   723 ;; *************** function _CalcError *****************
   724 ;; Defined at:
   725 ;;		line 11 in file "MOD_Correction.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;  Kp              2    0[BANK0 ] unsigned int 
   728 ;;  Ki              2    2[BANK0 ] unsigned int 
   729 ;;  Kd              2    4[BANK0 ] unsigned int 
   730 ;;  DIVIDER         2    6[BANK0 ] unsigned int 
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  proportional    2   36[BANK0 ] unsigned int 
   733 ;;  error           2   28[BANK0 ] unsigned int 
   734 ;;  differential    2   26[BANK0 ] unsigned int 
   735 ;;  position        2   24[BANK0 ] unsigned int 
   736 ;;  i               1   38[BANK0 ] unsigned char 
   737 ;;  sensors        16    8[BANK0 ] unsigned int [8]
   738 ;;  sum             2   32[BANK0 ] unsigned int 
   739 ;;  meanSum         2   30[BANK0 ] unsigned int 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  2    0[BANK0 ] int 
   742 ;; Registers used:
   743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   749 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
   750 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
   751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   752 ;;      Totals:         2      39       0       0       0       0       0       0       0       0       0       0       
      +0       0
   753 ;;Total ram usage:       41 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    1
   756 ;; This function calls:
   757 ;;		___lwdiv
   758 ;;		___wmul
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           
   765                           ;psect for function _CalcError
   766  072D                     _CalcError:	
   767                           
   768                           ;MOD_Correction.c: 12: unsigned int sensors[]={0,0,0,0,0,0,0,0};
   769                           
   770                           ;incstack = 0
   771                           ; Regs used in _CalcError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   772  072D  3047               	movlw	low CalcError@F12175
   773  072E  0086               	movwf	6
   774  072F  3000               	movlw	high CalcError@F12175
   775  0730  0087               	movwf	7
   776  0731  3028               	movlw	low CalcError@sensors
   777  0732  0084               	movwf	4
   778  0733  3000               	movlw	high CalcError@sensors
   779  0734  0085               	movwf	5
   780  0735  3010               	movlw	16
   781  0736  00F8               	movwf	??_CalcError
   782  0737                     u270:	
   783  0737  0016               	moviw fsr1++
   784  0738  001A               	movwi fsr0++
   785  0739  0BF8               	decfsz	??_CalcError,f
   786  073A  2F37               	goto	u270
   787                           
   788                           ;MOD_Correction.c: 13: unsigned int meanSum = 0;
   789  073B  0020               	movlb	0	; select bank0
   790  073C  01BE               	clrf	CalcError@meanSum
   791  073D  01BF               	clrf	CalcError@meanSum+1
   792                           
   793                           ;MOD_Correction.c: 14: unsigned int sum = 0;
   794  073E  01C0               	clrf	CalcError@sum
   795  073F  01C1               	clrf	CalcError@sum+1
   796                           
   797                           ;MOD_Correction.c: 15: for (char i = 0; i < 6; i++){
   798  0740  01C6               	clrf	CalcError@i
   799  0741  3006               	movlw	6
   800  0742  0246               	subwf	CalcError@i,w
   801  0743  1803               	btfsc	3,0
   802  0744  2F80               	goto	l544
   803  0745                     l536:	
   804                           
   805                           ;MOD_Correction.c: 18: meanSum += sensors[i]*i*1000;
   806  0745  0846               	movf	CalcError@i,w
   807  0746  00F8               	movwf	??_CalcError
   808  0747  01F9               	clrf	??_CalcError+1
   809  0748  0878               	movf	??_CalcError,w
   810  0749  00F0               	movwf	___wmul@multiplier
   811  074A  0879               	movf	??_CalcError+1,w
   812  074B  00F1               	movwf	___wmul@multiplier+1
   813  074C  3546               	lslf	CalcError@i,w
   814  074D  3E28               	addlw	(low (CalcError@sensors| 0))& (0+255)
   815  074E  0086               	movwf	6
   816  074F  0187               	clrf	7
   817  0750  3F40               	moviw [0]fsr1
   818  0751  00F2               	movwf	___wmul@multiplicand
   819  0752  3F41               	moviw [1]fsr1
   820  0753  00F3               	movwf	___wmul@multiplicand+1
   821  0754  3186  26C2  3187   	fcall	___wmul
   822  0757  0871               	movf	?___wmul+1,w
   823  0758  0020               	movlb	0	; select bank0
   824  0759  00C3               	movwf	_CalcError$328+1
   825  075A  0870               	movf	?___wmul,w
   826  075B  00C2               	movwf	_CalcError$328
   827                           
   828                           ;MOD_Correction.c: 18: meanSum += sensors[i]*i*1000;
   829  075C  0843               	movf	_CalcError$328+1,w
   830  075D  00F1               	movwf	___wmul@multiplier+1
   831  075E  0842               	movf	_CalcError$328,w
   832  075F  00F0               	movwf	___wmul@multiplier
   833  0760  30E8               	movlw	232
   834  0761  00F2               	movwf	___wmul@multiplicand
   835  0762  3003               	movlw	3
   836  0763  00F3               	movwf	___wmul@multiplicand+1
   837  0764  3186  26C2  3187   	fcall	___wmul
   838  0767  0870               	movf	?___wmul,w
   839  0768  0020               	movlb	0	; select bank0
   840  0769  07BE               	addwf	CalcError@meanSum,f
   841  076A  0871               	movf	?___wmul+1,w
   842  076B  3DBF               	addwfc	CalcError@meanSum+1,f
   843                           
   844                           ;MOD_Correction.c: 19: sum += sensors[i];
   845  076C  3546               	lslf	CalcError@i,w
   846  076D  3E28               	addlw	(low (CalcError@sensors| 0))& (0+255)
   847  076E  0086               	movwf	6
   848  076F  0187               	clrf	7
   849  0770  3F40               	moviw [0]fsr1
   850  0771  00F8               	movwf	??_CalcError
   851  0772  3F41               	moviw [1]fsr1
   852  0773  00F9               	movwf	??_CalcError+1
   853  0774  0878               	movf	??_CalcError,w
   854  0775  07C0               	addwf	CalcError@sum,f
   855  0776  0879               	movf	??_CalcError+1,w
   856  0777  3DC1               	addwfc	CalcError@sum+1,f
   857  0778  3001               	movlw	1
   858  0779  00F8               	movwf	??_CalcError
   859  077A  0878               	movf	??_CalcError,w
   860  077B  07C6               	addwf	CalcError@i,f
   861  077C  3006               	movlw	6
   862  077D  0246               	subwf	CalcError@i,w
   863  077E  1C03               	skipc
   864  077F  2F45               	goto	l536
   865  0780                     l544:	
   866                           
   867                           ;MOD_Correction.c: 20: }
   868                           ;MOD_Correction.c: 21: if (sum!=0){
   869  0780  0840               	movf	CalcError@sum,w
   870  0781  0441               	iorwf	CalcError@sum+1,w
   871  0782  1903               	btfsc	3,2
   872  0783  2FF1               	goto	l564
   873                           
   874                           ;MOD_Correction.c: 22: unsigned int position = meanSum/sum;
   875  0784  0841               	movf	CalcError@sum+1,w
   876  0785  00F1               	movwf	___lwdiv@divisor+1
   877  0786  0840               	movf	CalcError@sum,w
   878  0787  00F0               	movwf	___lwdiv@divisor
   879  0788  083F               	movf	CalcError@meanSum+1,w
   880  0789  00F3               	movwf	___lwdiv@dividend+1
   881  078A  083E               	movf	CalcError@meanSum,w
   882  078B  00F2               	movwf	___lwdiv@dividend
   883  078C  3186  26F9  3187   	fcall	___lwdiv
   884  078F  0871               	movf	?___lwdiv+1,w
   885  0790  0020               	movlb	0	; select bank0
   886  0791  00B9               	movwf	CalcError@position+1
   887  0792  0870               	movf	?___lwdiv,w
   888  0793  00B8               	movwf	CalcError@position
   889                           
   890                           ;MOD_Correction.c: 23: unsigned int proportional = position - 3500;
   891  0794  0838               	movf	CalcError@position,w
   892  0795  3E54               	addlw	84
   893  0796  00C4               	movwf	CalcError@proportional
   894  0797  30F2               	movlw	242
   895  0798  3D39               	addwfc	CalcError@position+1,w
   896  0799  00C5               	movwf	CalcError@proportional+1
   897                           
   898                           ;MOD_Correction.c: 24: static unsigned int _proportional = 0;
   899                           ;MOD_Correction.c: 25: static unsigned int integral = 0;
   900                           ;MOD_Correction.c: 26: integral += proportional;
   901  079A  0844               	movf	CalcError@proportional,w
   902  079B  07D7               	addwf	CalcError@integral,f
   903  079C  0845               	movf	CalcError@proportional+1,w
   904  079D  3DD8               	addwfc	CalcError@integral+1,f
   905                           
   906                           ;MOD_Correction.c: 27: unsigned int differential = proportional - _proportional;
   907  079E  0959               	comf	CalcError@_proportional,w
   908  079F  00F8               	movwf	??_CalcError
   909  07A0  095A               	comf	CalcError@_proportional+1,w
   910  07A1  00F9               	movwf	??_CalcError+1
   911  07A2  0AF8               	incf	??_CalcError,f
   912  07A3  1903               	skipnz
   913  07A4  0AF9               	incf	??_CalcError+1,f
   914  07A5  0844               	movf	CalcError@proportional,w
   915  07A6  0778               	addwf	??_CalcError,w
   916  07A7  00BA               	movwf	CalcError@differential
   917  07A8  0845               	movf	CalcError@proportional+1,w
   918  07A9  3D79               	addwfc	??_CalcError+1,w
   919  07AA  00BB               	movwf	CalcError@differential+1
   920                           
   921                           ;MOD_Correction.c: 28: unsigned int error = Kp*+Ki*integral+Kd*differential;
   922  07AB  0821               	movf	CalcError@Kp+1,w
   923  07AC  00F1               	movwf	___wmul@multiplier+1
   924  07AD  0820               	movf	CalcError@Kp,w
   925  07AE  00F0               	movwf	___wmul@multiplier
   926  07AF  0823               	movf	CalcError@Ki+1,w
   927  07B0  00F3               	movwf	___wmul@multiplicand+1
   928  07B1  0822               	movf	CalcError@Ki,w
   929  07B2  00F2               	movwf	___wmul@multiplicand
   930  07B3  3186  26C2  3187   	fcall	___wmul
   931  07B6  0871               	movf	?___wmul+1,w
   932  07B7  0020               	movlb	0	; select bank0
   933  07B8  00C3               	movwf	_CalcError$328+1
   934  07B9  0870               	movf	?___wmul,w
   935  07BA  00C2               	movwf	_CalcError$328
   936                           
   937                           ;MOD_Correction.c: 28: unsigned int error = Kp*+Ki*integral+Kd*differential;
   938  07BB  0843               	movf	_CalcError$328+1,w
   939  07BC  00F1               	movwf	___wmul@multiplier+1
   940  07BD  0842               	movf	_CalcError$328,w
   941  07BE  00F0               	movwf	___wmul@multiplier
   942  07BF  0858               	movf	CalcError@integral+1,w
   943  07C0  00F3               	movwf	___wmul@multiplicand+1
   944  07C1  0857               	movf	CalcError@integral,w
   945  07C2  00F2               	movwf	___wmul@multiplicand
   946  07C3  3186  26C2  3187   	fcall	___wmul
   947  07C6  0870               	movf	?___wmul,w
   948  07C7  00F8               	movwf	??_CalcError
   949  07C8  0871               	movf	?___wmul+1,w
   950  07C9  00F9               	movwf	??_CalcError+1
   951  07CA  0020               	movlb	0	; select bank0
   952  07CB  0825               	movf	CalcError@Kd+1,w
   953  07CC  00F1               	movwf	___wmul@multiplier+1
   954  07CD  0824               	movf	CalcError@Kd,w
   955  07CE  00F0               	movwf	___wmul@multiplier
   956  07CF  083B               	movf	CalcError@differential+1,w
   957  07D0  00F3               	movwf	___wmul@multiplicand+1
   958  07D1  083A               	movf	CalcError@differential,w
   959  07D2  00F2               	movwf	___wmul@multiplicand
   960  07D3  3186  26C2  3187   	fcall	___wmul
   961  07D6  0870               	movf	?___wmul,w
   962  07D7  0778               	addwf	??_CalcError,w
   963  07D8  0020               	movlb	0	; select bank0
   964  07D9  00BC               	movwf	CalcError@error
   965  07DA  0871               	movf	?___wmul+1,w
   966  07DB  3D79               	addwfc	??_CalcError+1,w
   967  07DC  00BD               	movwf	CalcError@error+1
   968                           
   969                           ;MOD_Correction.c: 29: _proportional = proportional;
   970  07DD  0845               	movf	CalcError@proportional+1,w
   971  07DE  00DA               	movwf	CalcError@_proportional+1
   972  07DF  0844               	movf	CalcError@proportional,w
   973  07E0  00D9               	movwf	CalcError@_proportional
   974                           
   975                           ;MOD_Correction.c: 30: return error/DIVIDER;
   976  07E1  0827               	movf	CalcError@DIVIDER+1,w
   977  07E2  00F1               	movwf	___lwdiv@divisor+1
   978  07E3  0826               	movf	CalcError@DIVIDER,w
   979  07E4  00F0               	movwf	___lwdiv@divisor
   980  07E5  083D               	movf	CalcError@error+1,w
   981  07E6  00F3               	movwf	___lwdiv@dividend+1
   982  07E7  083C               	movf	CalcError@error,w
   983  07E8  00F2               	movwf	___lwdiv@dividend
   984  07E9  3186  26F9         	fcall	___lwdiv
   985  07EB  0871               	movf	?___lwdiv+1,w
   986  07EC  0020               	movlb	0	; select bank0
   987  07ED  00A1               	movwf	?_CalcError+1
   988  07EE  0870               	movf	?___lwdiv,w
   989  07EF  00A0               	movwf	?_CalcError
   990                           
   991                           ;MOD_Correction.c: 31: }
   992  07F0  0008               	return
   993  07F1                     l564:	
   994                           
   995                           ;MOD_Correction.c: 32: else{
   996                           ;MOD_Correction.c: 33: return -1;
   997  07F1  30FF               	movlw	255
   998  07F2  00A0               	movwf	?_CalcError
   999  07F3  30FF               	movlw	255
  1000  07F4  00A1               	movwf	?_CalcError+1
  1001  07F5  0008               	return
  1002  07F6                     __end_of_CalcError:	
  1003                           
  1004                           	psect	text2
  1005  06C2                     __ptext2:	
  1006 ;; *************** function ___wmul *****************
  1007 ;; Defined at:
  1008 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  multiplier      2    0[COMMON] unsigned int 
  1011 ;;  multiplicand    2    2[COMMON] unsigned int 
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;  product         2    4[COMMON] unsigned int 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  2    0[COMMON] unsigned int 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1026 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1027 ;;Total ram usage:        6 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_CalcError
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           
  1037                           ;psect for function ___wmul
  1038  06C2                     ___wmul:	
  1039                           
  1040                           ;incstack = 0
  1041                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1042  06C2  01F4               	clrf	___wmul@product
  1043  06C3  01F5               	clrf	___wmul@product+1
  1044  06C4                     l486:	
  1045  06C4  1C70               	btfss	___wmul@multiplier,0
  1046  06C5  2ECA               	goto	l24
  1047  06C6  0872               	movf	___wmul@multiplicand,w
  1048  06C7  07F4               	addwf	___wmul@product,f
  1049  06C8  0873               	movf	___wmul@multiplicand+1,w
  1050  06C9  3DF5               	addwfc	___wmul@product+1,f
  1051  06CA                     l24:	
  1052  06CA  3001               	movlw	1
  1053  06CB                     u175:	
  1054  06CB  35F2               	lslf	___wmul@multiplicand,f
  1055  06CC  0DF3               	rlf	___wmul@multiplicand+1,f
  1056  06CD  0B89               	decfsz	9,f
  1057  06CE  2ECB               	goto	u175
  1058  06CF  3001               	movlw	1
  1059  06D0                     u185:	
  1060  06D0  36F1               	lsrf	___wmul@multiplier+1,f
  1061  06D1  0CF0               	rrf	___wmul@multiplier,f
  1062  06D2  0B89               	decfsz	9,f
  1063  06D3  2ED0               	goto	u185
  1064  06D4  0870               	movf	___wmul@multiplier,w
  1065  06D5  0471               	iorwf	___wmul@multiplier+1,w
  1066  06D6  1D03               	btfss	3,2
  1067  06D7  2EC4               	goto	l486
  1068  06D8  0875               	movf	___wmul@product+1,w
  1069  06D9  00F1               	movwf	?___wmul+1
  1070  06DA  0874               	movf	___wmul@product,w
  1071  06DB  00F0               	movwf	?___wmul
  1072  06DC  0008               	return
  1073  06DD                     __end_of___wmul:	
  1074                           
  1075                           	psect	text3
  1076  06F9                     __ptext3:	
  1077 ;; *************** function ___lwdiv *****************
  1078 ;; Defined at:
  1079 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  divisor         2    0[COMMON] unsigned int 
  1082 ;;  dividend        2    2[COMMON] unsigned int 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  quotient        2    5[COMMON] unsigned int 
  1085 ;;  counter         1    7[COMMON] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2    0[COMMON] unsigned int 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1095 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1096 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1097 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1098 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1099 ;;Total ram usage:        8 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_CalcError
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function ___lwdiv
  1110  06F9                     ___lwdiv:	
  1111                           
  1112                           ;incstack = 0
  1113                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1114  06F9  01F5               	clrf	___lwdiv@quotient
  1115  06FA  01F6               	clrf	___lwdiv@quotient+1
  1116  06FB  0870               	movf	___lwdiv@divisor,w
  1117  06FC  0471               	iorwf	___lwdiv@divisor+1,w
  1118  06FD  1903               	btfsc	3,2
  1119  06FE  2F28               	goto	l520
  1120  06FF  01F7               	clrf	___lwdiv@counter
  1121  0700  0AF7               	incf	___lwdiv@counter,f
  1122  0701                     l508:	
  1123  0701  1BF1               	btfsc	___lwdiv@divisor+1,7
  1124  0702  2F0D               	goto	l510
  1125  0703  3001               	movlw	1
  1126  0704                     u215:	
  1127  0704  35F0               	lslf	___lwdiv@divisor,f
  1128  0705  0DF1               	rlf	___lwdiv@divisor+1,f
  1129  0706  0B89               	decfsz	9,f
  1130  0707  2F04               	goto	u215
  1131  0708  3001               	movlw	1
  1132  0709  00F4               	movwf	??___lwdiv
  1133  070A  0874               	movf	??___lwdiv,w
  1134  070B  07F7               	addwf	___lwdiv@counter,f
  1135  070C  2F01               	goto	l508
  1136  070D                     l510:	
  1137  070D  3001               	movlw	1
  1138  070E                     u235:	
  1139  070E  35F5               	lslf	___lwdiv@quotient,f
  1140  070F  0DF6               	rlf	___lwdiv@quotient+1,f
  1141  0710  0B89               	decfsz	9,f
  1142  0711  2F0E               	goto	u235
  1143  0712  0871               	movf	___lwdiv@divisor+1,w
  1144  0713  0273               	subwf	___lwdiv@dividend+1,w
  1145  0714  1D03               	skipz
  1146  0715  2F18               	goto	u245
  1147  0716  0870               	movf	___lwdiv@divisor,w
  1148  0717  0272               	subwf	___lwdiv@dividend,w
  1149  0718                     u245:	
  1150  0718  1C03               	skipc
  1151  0719  2F1F               	goto	l516
  1152  071A  0870               	movf	___lwdiv@divisor,w
  1153  071B  02F2               	subwf	___lwdiv@dividend,f
  1154  071C  0871               	movf	___lwdiv@divisor+1,w
  1155  071D  3BF3               	subwfb	___lwdiv@dividend+1,f
  1156  071E  1475               	bsf	___lwdiv@quotient,0
  1157  071F                     l516:	
  1158  071F  3001               	movlw	1
  1159  0720                     u255:	
  1160  0720  36F1               	lsrf	___lwdiv@divisor+1,f
  1161  0721  0CF0               	rrf	___lwdiv@divisor,f
  1162  0722  0B89               	decfsz	9,f
  1163  0723  2F20               	goto	u255
  1164  0724  3001               	movlw	1
  1165  0725  02F7               	subwf	___lwdiv@counter,f
  1166  0726  1D03               	btfss	3,2
  1167  0727  2F0D               	goto	l510
  1168  0728                     l520:	
  1169  0728  0876               	movf	___lwdiv@quotient+1,w
  1170  0729  00F1               	movwf	?___lwdiv+1
  1171  072A  0875               	movf	___lwdiv@quotient,w
  1172  072B  00F0               	movwf	?___lwdiv
  1173  072C  0008               	return
  1174  072D                     __end_of___lwdiv:	
  1175  007E                     btemp	set	126	;btemp
  1176  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     39      59
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_CalcError
    _CalcError->___lwdiv

Critical Paths under _main in BANK0

    _main->_CalcError

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1575
                                             10 COMMON     2     2      0
                          _CalcError
 ---------------------------------------------------------------------------------
 (1) _CalcError                                           43    35      8    1573
                                              8 COMMON     2     2      0
                                              0 BANK0     39    31      8
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     522
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     334
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcError
     ___lwdiv
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      3B       5       73.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      47      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      47      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Feb 10 10:42:57 2017

                      l5 06DD           CalcError@error 003C                       l24 06CA  
    ___wmul@multiplicand 0072                      l510 070D                      l520 0728  
                    l516 071F                      l508 0701                      l544 0780  
                    l536 0745                      l564 07F1                      l486 06C4  
                    u215 0704                      u235 070E                      u245 0718  
                    u270 0737                      u255 0720                      u175 06CB  
                    u185 06D0         CalcError@meanSum 003E                      wreg 0009  
       CalcError@sensors 0028                     _main 06DD                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
      CalcError@integral 0057        CalcError@position 0038                    ?_main 0070  
        __end_of___lwdiv 072D            _CalcError$328 0042                    status 0003  
                  wtemp0 007E       __size_of_CalcError 00C9          __initialization 07F6  
           __end_of_main 06F9                   ??_main 007A                   ___wmul 06C2  
              ??___lwdiv 0074        __end_of_CalcError 07F6  __end_of__initialization 07FD  
           CalcError@sum 0040           __pcstackCOMMON 0070               __pbssBANK0 0047  
             __pmaintext 06DD                  ?___wmul 0070    CalcError@proportional 0044  
        __size_of___wmul 001B                  ___lwdiv 06F9                  __ptext1 072D  
                __ptext2 06C2                  __ptext3 06F9                  clrloop0 06BD  
   end_of_initialization 07FD                _CalcError 072D   CalcError@_proportional 0059  
         __end_of___wmul 06DD      start_initialization 07F6               ?_CalcError 0020  
               ??___wmul 0074              CalcError@Kd 0024              CalcError@Ki 0022  
            CalcError@Kp 0020                ___latbits 0002            __pcstackBANK0 0020  
  CalcError@differential 003A         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
       ___lwdiv@quotient 0075              ??_CalcError 0078           ___wmul@product 0074  
              clear_ram0 06BC        ___wmul@multiplier 0070               CalcError@i 0046  
       __size_of___lwdiv 0034          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
          __size_of_main 001C                 main@asdf 007A         CalcError@DIVIDER 0026  
        CalcError@F12175 0047  
