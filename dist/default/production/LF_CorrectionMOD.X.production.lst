

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Feb 09 11:50:55 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1619 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011C                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  018E                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0194                     	;# 
   126  0195                     	;# 
   127  0196                     	;# 
   128  0197                     	;# 
   129  0199                     	;# 
   130  0199                     	;# 
   131  0199                     	;# 
   132  019A                     	;# 
   133  019A                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  019C                     	;# 
   142  019C                     	;# 
   143  019D                     	;# 
   144  019D                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019E                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  019F                     	;# 
   153  019F                     	;# 
   154  020C                     	;# 
   155  020D                     	;# 
   156  020E                     	;# 
   157  0211                     	;# 
   158  0211                     	;# 
   159  0212                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0213                     	;# 
   163  0214                     	;# 
   164  0214                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0216                     	;# 
   171  0217                     	;# 
   172  0217                     	;# 
   173  028C                     	;# 
   174  028D                     	;# 
   175  028E                     	;# 
   176  0291                     	;# 
   177  0291                     	;# 
   178  0292                     	;# 
   179  0293                     	;# 
   180  0294                     	;# 
   181  0298                     	;# 
   182  0298                     	;# 
   183  0299                     	;# 
   184  029A                     	;# 
   185  029B                     	;# 
   186  029E                     	;# 
   187  030C                     	;# 
   188  030D                     	;# 
   189  030E                     	;# 
   190  038C                     	;# 
   191  038D                     	;# 
   192  038E                     	;# 
   193  0391                     	;# 
   194  0392                     	;# 
   195  0393                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  0397                     	;# 
   200  0398                     	;# 
   201  0399                     	;# 
   202  040E                     	;# 
   203  0413                     	;# 
   204  0413                     	;# 
   205  0414                     	;# 
   206  0414                     	;# 
   207  0415                     	;# 
   208  0416                     	;# 
   209  0417                     	;# 
   210  0418                     	;# 
   211  041A                     	;# 
   212  041A                     	;# 
   213  041B                     	;# 
   214  041B                     	;# 
   215  041C                     	;# 
   216  041D                     	;# 
   217  041E                     	;# 
   218  041F                     	;# 
   219  0493                     	;# 
   220  0494                     	;# 
   221  0495                     	;# 
   222  0496                     	;# 
   223  049A                     	;# 
   224  049B                     	;# 
   225  049C                     	;# 
   226  049D                     	;# 
   227  058C                     	;# 
   228  058C                     	;# 
   229  058D                     	;# 
   230  058E                     	;# 
   231  058E                     	;# 
   232  058F                     	;# 
   233  0590                     	;# 
   234  0590                     	;# 
   235  0591                     	;# 
   236  0592                     	;# 
   237  0592                     	;# 
   238  0593                     	;# 
   239  0594                     	;# 
   240  0594                     	;# 
   241  0595                     	;# 
   242  0596                     	;# 
   243  0596                     	;# 
   244  0597                     	;# 
   245  0598                     	;# 
   246  0599                     	;# 
   247  059A                     	;# 
   248  059B                     	;# 
   249  059B                     	;# 
   250  059C                     	;# 
   251  059D                     	;# 
   252  060C                     	;# 
   253  060C                     	;# 
   254  060D                     	;# 
   255  060E                     	;# 
   256  060F                     	;# 
   257  060F                     	;# 
   258  0610                     	;# 
   259  0611                     	;# 
   260  0612                     	;# 
   261  0613                     	;# 
   262  0614                     	;# 
   263  0617                     	;# 
   264  0618                     	;# 
   265  0619                     	;# 
   266  061A                     	;# 
   267  061B                     	;# 
   268  061C                     	;# 
   269  0691                     	;# 
   270  0692                     	;# 
   271  0693                     	;# 
   272  0694                     	;# 
   273  0695                     	;# 
   274  0696                     	;# 
   275  0697                     	;# 
   276  0699                     	;# 
   277  069A                     	;# 
   278  0711                     	;# 
   279  0712                     	;# 
   280  0713                     	;# 
   281  0714                     	;# 
   282  0715                     	;# 
   283  0718                     	;# 
   284  0718                     	;# 
   285  0719                     	;# 
   286  071A                     	;# 
   287  071A                     	;# 
   288  071B                     	;# 
   289  071C                     	;# 
   290  071D                     	;# 
   291  0791                     	;# 
   292  0791                     	;# 
   293  0792                     	;# 
   294  0793                     	;# 
   295  0793                     	;# 
   296  0794                     	;# 
   297  0795                     	;# 
   298  0795                     	;# 
   299  0796                     	;# 
   300  0797                     	;# 
   301  0797                     	;# 
   302  0798                     	;# 
   303  0799                     	;# 
   304  079A                     	;# 
   305  080C                     	;# 
   306  080C                     	;# 
   307  080D                     	;# 
   308  080E                     	;# 
   309  080E                     	;# 
   310  080F                     	;# 
   311  0810                     	;# 
   312  0810                     	;# 
   313  0811                     	;# 
   314  0812                     	;# 
   315  0812                     	;# 
   316  0813                     	;# 
   317  0814                     	;# 
   318  0815                     	;# 
   319  0816                     	;# 
   320  0817                     	;# 
   321  0818                     	;# 
   322  0819                     	;# 
   323  081A                     	;# 
   324  081A                     	;# 
   325  081B                     	;# 
   326  081C                     	;# 
   327  081C                     	;# 
   328  081D                     	;# 
   329  088C                     	;# 
   330  088D                     	;# 
   331  088E                     	;# 
   332  088F                     	;# 
   333  088F                     	;# 
   334  0890                     	;# 
   335  0891                     	;# 
   336  0892                     	;# 
   337  0893                     	;# 
   338  0893                     	;# 
   339  0894                     	;# 
   340  0895                     	;# 
   341  0896                     	;# 
   342  0897                     	;# 
   343  0897                     	;# 
   344  0898                     	;# 
   345  0899                     	;# 
   346  0D8C                     	;# 
   347  0D8C                     	;# 
   348  0D8D                     	;# 
   349  0D8E                     	;# 
   350  0D8F                     	;# 
   351  0D8F                     	;# 
   352  0D90                     	;# 
   353  0D91                     	;# 
   354  0D92                     	;# 
   355  0D92                     	;# 
   356  0D93                     	;# 
   357  0D94                     	;# 
   358  0D95                     	;# 
   359  0D95                     	;# 
   360  0D96                     	;# 
   361  0D97                     	;# 
   362  0D98                     	;# 
   363  0D99                     	;# 
   364  0D9A                     	;# 
   365  0D9B                     	;# 
   366  0D9C                     	;# 
   367  0D9D                     	;# 
   368  0D9E                     	;# 
   369  0D9E                     	;# 
   370  0D9F                     	;# 
   371  0DA0                     	;# 
   372  0DA1                     	;# 
   373  0DA1                     	;# 
   374  0DA2                     	;# 
   375  0DA3                     	;# 
   376  0DA4                     	;# 
   377  0DA4                     	;# 
   378  0DA5                     	;# 
   379  0DA6                     	;# 
   380  0DA7                     	;# 
   381  0DA7                     	;# 
   382  0DA8                     	;# 
   383  0DA9                     	;# 
   384  0DAA                     	;# 
   385  0DAB                     	;# 
   386  0DAC                     	;# 
   387  0DAD                     	;# 
   388  0DAE                     	;# 
   389  0DAF                     	;# 
   390  0E0F                     	;# 
   391  0E10                     	;# 
   392  0E11                     	;# 
   393  0E12                     	;# 
   394  0E13                     	;# 
   395  0E14                     	;# 
   396  0E15                     	;# 
   397  0E16                     	;# 
   398  0E17                     	;# 
   399  0E18                     	;# 
   400  0E19                     	;# 
   401  0E1A                     	;# 
   402  0E1B                     	;# 
   403  0E1C                     	;# 
   404  0E1D                     	;# 
   405  0E1E                     	;# 
   406  0E1F                     	;# 
   407  0E20                     	;# 
   408  0E21                     	;# 
   409  0E22                     	;# 
   410  0E23                     	;# 
   411  0E24                     	;# 
   412  0E25                     	;# 
   413  0E26                     	;# 
   414  0E27                     	;# 
   415  0E28                     	;# 
   416  0E29                     	;# 
   417  0E2A                     	;# 
   418  0E2B                     	;# 
   419  0E2C                     	;# 
   420  0E2D                     	;# 
   421  0E2E                     	;# 
   422  0E90                     	;# 
   423  0E91                     	;# 
   424  0E92                     	;# 
   425  0E94                     	;# 
   426  0E95                     	;# 
   427  0E9C                     	;# 
   428  0E9D                     	;# 
   429  0E9E                     	;# 
   430  0E9F                     	;# 
   431  0EA0                     	;# 
   432  0EA1                     	;# 
   433  0EA2                     	;# 
   434  0EA3                     	;# 
   435  0EA4                     	;# 
   436  0EA5                     	;# 
   437  0EA6                     	;# 
   438  0EA7                     	;# 
   439  0F0F                     	;# 
   440  0F10                     	;# 
   441  0F11                     	;# 
   442  0F12                     	;# 
   443  0F13                     	;# 
   444  0F14                     	;# 
   445  0F15                     	;# 
   446  0F16                     	;# 
   447  0F17                     	;# 
   448  0F18                     	;# 
   449  0F19                     	;# 
   450  0F1A                     	;# 
   451  0F1B                     	;# 
   452  0F1C                     	;# 
   453  0F1D                     	;# 
   454  0F1E                     	;# 
   455  0F1F                     	;# 
   456  0F20                     	;# 
   457  0F21                     	;# 
   458  0F22                     	;# 
   459  0F23                     	;# 
   460  0F24                     	;# 
   461  0F25                     	;# 
   462  0F26                     	;# 
   463  0F27                     	;# 
   464  0F28                     	;# 
   465  0F29                     	;# 
   466  0F2A                     	;# 
   467  0F2B                     	;# 
   468  0F2C                     	;# 
   469  0F2D                     	;# 
   470  0F2E                     	;# 
   471  0F2F                     	;# 
   472  0F30                     	;# 
   473  0F31                     	;# 
   474  0F32                     	;# 
   475  0F33                     	;# 
   476  0F34                     	;# 
   477  0F35                     	;# 
   478  0F36                     	;# 
   479  0F37                     	;# 
   480  0FE4                     	;# 
   481  0FE5                     	;# 
   482  0FE6                     	;# 
   483  0FE7                     	;# 
   484  0FE8                     	;# 
   485  0FE9                     	;# 
   486  0FEA                     	;# 
   487  0FEB                     	;# 
   488  0FED                     	;# 
   489  0FEE                     	;# 
   490  0FEF                     	;# 
   491                           
   492                           	psect	idataBANK0
   493  0707                     __pidataBANK0:	
   494                           
   495                           ;initializer for CalcError@F12167
   496  0707  3400               	retlw	0
   497  0708  3400               	retlw	0
   498  0709  3400               	retlw	0
   499  070A  3400               	retlw	0
   500  070B  3400               	retlw	0
   501  070C  3400               	retlw	0
   502  070D  3401               	retlw	1
   503  070E  3400               	retlw	0
   504  070F  3401               	retlw	1
   505  0710  3400               	retlw	0
   506  0711  3400               	retlw	0
   507  0712  3400               	retlw	0
   508  0713  3400               	retlw	0
   509  0714  3400               	retlw	0
   510  0715  3400               	retlw	0
   511  0716  3400               	retlw	0
   512                           
   513                           	psect	cinit
   514  07EE                     start_initialization:	
   515                           ; #config settings
   516                           
   517  07EE                     __initialization:	
   518                           
   519                           ; Initialize objects allocated to BANK0
   520  07EE  3007               	movlw	low __pidataBANK0
   521  07EF  0084               	movwf	4
   522  07F0  3087               	movlw	(high __pidataBANK0)| (0+128)
   523  07F1  0085               	movwf	5
   524  07F2  303F               	movlw	low __pdataBANK0
   525  07F3  0086               	movwf	6
   526  07F4  3000               	movlw	high __pdataBANK0
   527  07F5  0087               	movwf	7
   528  07F6  3010               	movlw	16
   529  07F7  3187  2701         	fcall	init_ram
   530                           
   531                           ; Clear objects allocated to BANK0
   532  07F9  01CF               	clrf	__pbssBANK0& (0+127)
   533  07FA  01D0               	clrf	(__pbssBANK0+1)& (0+127)
   534  07FB  01D1               	clrf	(__pbssBANK0+2)& (0+127)
   535  07FC  01D2               	clrf	(__pbssBANK0+3)& (0+127)
   536  07FD                     end_of_initialization:	
   537                           ;End of C runtime variable initialization code
   538                           
   539  07FD                     __end_of__initialization:	
   540  07FD  0020               	movlb	0
   541  07FE  3186  2EFD         	ljmp	_main	;jump to C main() function
   542                           
   543                           	psect	bssBANK0
   544  004F                     __pbssBANK0:	
   545  004F                     CalcError@_proportional:	
   546  004F                     	ds	2
   547  0051                     CalcError@integral:	
   548  0051                     	ds	2
   549                           
   550                           	psect	dataBANK0
   551  003F                     __pdataBANK0:	
   552  003F                     CalcError@F12167:	
   553  003F                     	ds	16
   554                           
   555                           	psect	inittext
   556  0701                     init_ram:	
   557  0701  00FE               	movwf	126
   558  0702                     initloop:	
   559  0702  0012               	moviw fsr0++
   560  0703  001E               	movwi fsr1++
   561  0704  0BFE               	decfsz	126,f
   562  0705  2F02               	goto	initloop
   563  0706  3400               	retlw	0
   564                           
   565                           	psect	cstackCOMMON
   566  0070                     __pcstackCOMMON:	
   567  0070                     ?_CalcError:	
   568  0070                     ?___wmul:	
   569                           ; 2 bytes @ 0x0
   570                           
   571  0070                     ?___lwdiv:	
   572                           ; 2 bytes @ 0x0
   573                           
   574  0070                     ___wmul@multiplier:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0070                     ___lwdiv@divisor:	
   578                           ; 2 bytes @ 0x0
   579                           
   580                           
   581                           ; 2 bytes @ 0x0
   582  0070                     	ds	2
   583  0072                     ___wmul@multiplicand:	
   584  0072                     ___lwdiv@dividend:	
   585                           ; 2 bytes @ 0x2
   586                           
   587                           
   588                           ; 2 bytes @ 0x2
   589  0072                     	ds	2
   590  0074                     ??___wmul:	
   591  0074                     ??___lwdiv:	
   592                           ; 1 bytes @ 0x4
   593                           
   594  0074                     ___wmul@product:	
   595                           ; 1 bytes @ 0x4
   596                           
   597                           
   598                           ; 2 bytes @ 0x4
   599  0074                     	ds	1
   600  0075                     ___lwdiv@quotient:	
   601                           
   602                           ; 2 bytes @ 0x5
   603  0075                     	ds	2
   604  0077                     ___lwdiv@counter:	
   605                           
   606                           ; 1 bytes @ 0x7
   607  0077                     	ds	1
   608  0078                     ??_CalcError:	
   609                           
   610                           ; 1 bytes @ 0x8
   611  0078                     	ds	2
   612  007A                     ?_main:	
   613  007A                     main@argc:	
   614                           ; 2 bytes @ 0xA
   615                           
   616                           
   617                           ; 2 bytes @ 0xA
   618  007A                     	ds	2
   619  007C                     main@argv:	
   620                           
   621                           ; 2 bytes @ 0xC
   622  007C                     	ds	2
   623  007E                     ??_main:	
   624                           
   625                           	psect	cstackBANK0
   626  0020                     __pcstackBANK0:	
   627                           ; 1 bytes @ 0xE
   628                           
   629  0020                     CalcError@sensors:	
   630                           
   631                           ; 16 bytes @ 0x0
   632  0020                     	ds	16
   633  0030                     CalcError@error:	
   634                           
   635                           ; 2 bytes @ 0x10
   636  0030                     	ds	2
   637  0032                     CalcError@position:	
   638                           
   639                           ; 2 bytes @ 0x12
   640  0032                     	ds	2
   641  0034                     CalcError@differential:	
   642                           
   643                           ; 2 bytes @ 0x14
   644  0034                     	ds	2
   645  0036                     _CalcError$321:	
   646                           
   647                           ; 2 bytes @ 0x16
   648  0036                     	ds	2
   649  0038                     CalcError@meanSum:	
   650                           
   651                           ; 2 bytes @ 0x18
   652  0038                     	ds	2
   653  003A                     CalcError@sum:	
   654                           
   655                           ; 2 bytes @ 0x1A
   656  003A                     	ds	2
   657  003C                     CalcError@proportional:	
   658                           
   659                           ; 2 bytes @ 0x1C
   660  003C                     	ds	2
   661  003E                     CalcError@i:	
   662                           
   663                           ; 1 bytes @ 0x1E
   664  003E                     	ds	1
   665                           
   666                           	psect	maintext
   667  06FD                     __pmaintext:	
   668 ;;
   669 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   670 ;;
   671 ;; *************** function _main *****************
   672 ;; Defined at:
   673 ;;		line 16 in file "main.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  argc            2   10[COMMON] int 
   676 ;;  argv            2   12[COMMON] PTR PTR unsigned char 
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  2   10[COMMON] int 
   681 ;; Registers used:
   682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : B1F/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   692 ;;Total ram usage:        4 bytes
   693 ;; Hardware stack levels required when called:    2
   694 ;; This function calls:
   695 ;;		_CalcError
   696 ;; This function is called by:
   697 ;;		Startup code after reset
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _main
   703  06FD                     _main:	
   704  06FD                     l5:	
   705                           ;incstack = 0
   706                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   707                           ;main.c: 18: for(;;){
   708                           
   709                           
   710                           ;main.c: 19: CalcError();
   711  06FD  3187  2766  3186   	fcall	_CalcError
   712                           
   713                           ;main.c: 20: }
   714  0700  2EFD               	goto	l5
   715  0701                     __end_of_main:	
   716                           ;main.c: 22: return (0);
   717                           ;	Return value of _main is never used
   718                           
   719                           
   720                           	psect	text1
   721  0766                     __ptext1:	
   722 ;; *************** function _CalcError *****************
   723 ;; Defined at:
   724 ;;		line 14 in file "MOD_Correction.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;  proportional    2   28[BANK0 ] unsigned int 
   729 ;;  differential    2   20[BANK0 ] unsigned int 
   730 ;;  position        2   18[BANK0 ] unsigned int 
   731 ;;  error           2   16[BANK0 ] unsigned int 
   732 ;;  i               1   30[BANK0 ] unsigned char 
   733 ;;  sensors        16    0[BANK0 ] unsigned int [8]
   734 ;;  sum             2   26[BANK0 ] unsigned int 
   735 ;;  meanSum         2   24[BANK0 ] unsigned int 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  2    2[None  ] int 
   738 ;; Registers used:
   739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   746 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
   747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   748 ;;      Totals:         2      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
   749 ;;Total ram usage:       33 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    1
   752 ;; This function calls:
   753 ;;		___lwdiv
   754 ;;		___wmul
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           
   761                           ;psect for function _CalcError
   762  0766                     _CalcError:	
   763                           
   764                           ;MOD_Correction.c: 15: uint16_t sensors[]={0,0,0,1,1,0,0,0};
   765                           
   766                           ;incstack = 0
   767                           ; Regs used in _CalcError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   768  0766  303F               	movlw	low CalcError@F12167
   769  0767  0086               	movwf	6
   770  0768  3000               	movlw	high CalcError@F12167
   771  0769  0087               	movwf	7
   772  076A  3020               	movlw	low CalcError@sensors
   773  076B  0084               	movwf	4
   774  076C  3000               	movlw	high CalcError@sensors
   775  076D  0085               	movwf	5
   776  076E  3010               	movlw	16
   777  076F  00F8               	movwf	??_CalcError
   778  0770                     u270:	
   779  0770  0016               	moviw fsr1++
   780  0771  001A               	movwi fsr0++
   781  0772  0BF8               	decfsz	??_CalcError,f
   782  0773  2F70               	goto	u270
   783                           
   784                           ;MOD_Correction.c: 16: uint16_t meanSum = 0;
   785  0774  0020               	movlb	0	; select bank0
   786  0775  01B8               	clrf	CalcError@meanSum
   787  0776  01B9               	clrf	CalcError@meanSum+1
   788                           
   789                           ;MOD_Correction.c: 17: uint16_t sum = 0;
   790  0777  01BA               	clrf	CalcError@sum
   791  0778  01BB               	clrf	CalcError@sum+1
   792                           
   793                           ;MOD_Correction.c: 18: for (char i = 0; i < 6; i++){
   794  0779  01BE               	clrf	CalcError@i
   795  077A  3006               	movlw	6
   796  077B  023E               	subwf	CalcError@i,w
   797  077C  1803               	btfsc	3,0
   798  077D  2FB9               	goto	l540
   799  077E                     l532:	
   800                           
   801                           ;MOD_Correction.c: 21: meanSum += sensors[i]*i*1000;
   802  077E  083E               	movf	CalcError@i,w
   803  077F  00F8               	movwf	??_CalcError
   804  0780  01F9               	clrf	??_CalcError+1
   805  0781  0878               	movf	??_CalcError,w
   806  0782  00F0               	movwf	___wmul@multiplier
   807  0783  0879               	movf	??_CalcError+1,w
   808  0784  00F1               	movwf	___wmul@multiplier+1
   809  0785  353E               	lslf	CalcError@i,w
   810  0786  3E20               	addlw	(low (CalcError@sensors| 0))& (0+255)
   811  0787  0086               	movwf	6
   812  0788  0187               	clrf	7
   813  0789  3F40               	moviw [0]fsr1
   814  078A  00F2               	movwf	___wmul@multiplicand
   815  078B  3F41               	moviw [1]fsr1
   816  078C  00F3               	movwf	___wmul@multiplicand+1
   817  078D  3187  2717  3187   	fcall	___wmul
   818  0790  0871               	movf	?___wmul+1,w
   819  0791  0020               	movlb	0	; select bank0
   820  0792  00B7               	movwf	_CalcError$321+1
   821  0793  0870               	movf	?___wmul,w
   822  0794  00B6               	movwf	_CalcError$321
   823                           
   824                           ;MOD_Correction.c: 21: meanSum += sensors[i]*i*1000;
   825  0795  0837               	movf	_CalcError$321+1,w
   826  0796  00F1               	movwf	___wmul@multiplier+1
   827  0797  0836               	movf	_CalcError$321,w
   828  0798  00F0               	movwf	___wmul@multiplier
   829  0799  30E8               	movlw	232
   830  079A  00F2               	movwf	___wmul@multiplicand
   831  079B  3003               	movlw	3
   832  079C  00F3               	movwf	___wmul@multiplicand+1
   833  079D  3187  2717  3187   	fcall	___wmul
   834  07A0  0870               	movf	?___wmul,w
   835  07A1  0020               	movlb	0	; select bank0
   836  07A2  07B8               	addwf	CalcError@meanSum,f
   837  07A3  0871               	movf	?___wmul+1,w
   838  07A4  3DB9               	addwfc	CalcError@meanSum+1,f
   839                           
   840                           ;MOD_Correction.c: 22: sum += sensors[i];
   841  07A5  353E               	lslf	CalcError@i,w
   842  07A6  3E20               	addlw	(low (CalcError@sensors| 0))& (0+255)
   843  07A7  0086               	movwf	6
   844  07A8  0187               	clrf	7
   845  07A9  3F40               	moviw [0]fsr1
   846  07AA  00F8               	movwf	??_CalcError
   847  07AB  3F41               	moviw [1]fsr1
   848  07AC  00F9               	movwf	??_CalcError+1
   849  07AD  0878               	movf	??_CalcError,w
   850  07AE  07BA               	addwf	CalcError@sum,f
   851  07AF  0879               	movf	??_CalcError+1,w
   852  07B0  3DBB               	addwfc	CalcError@sum+1,f
   853  07B1  3001               	movlw	1
   854  07B2  00F8               	movwf	??_CalcError
   855  07B3  0878               	movf	??_CalcError,w
   856  07B4  07BE               	addwf	CalcError@i,f
   857  07B5  3006               	movlw	6
   858  07B6  023E               	subwf	CalcError@i,w
   859  07B7  1C03               	skipc
   860  07B8  2F7E               	goto	l532
   861  07B9                     l540:	
   862                           
   863                           ;MOD_Correction.c: 23: }
   864                           ;MOD_Correction.c: 24: if (sum!=0){
   865  07B9  083A               	movf	CalcError@sum,w
   866  07BA  043B               	iorwf	CalcError@sum+1,w
   867  07BB  1903               	btfsc	3,2
   868  07BC  0008               	return
   869                           
   870                           ;MOD_Correction.c: 25: uint16_t position = meanSum/sum;
   871  07BD  083B               	movf	CalcError@sum+1,w
   872  07BE  00F1               	movwf	___lwdiv@divisor+1
   873  07BF  083A               	movf	CalcError@sum,w
   874  07C0  00F0               	movwf	___lwdiv@divisor
   875  07C1  0839               	movf	CalcError@meanSum+1,w
   876  07C2  00F3               	movwf	___lwdiv@dividend+1
   877  07C3  0838               	movf	CalcError@meanSum,w
   878  07C4  00F2               	movwf	___lwdiv@dividend
   879  07C5  3187  2732         	fcall	___lwdiv
   880  07C7  0871               	movf	?___lwdiv+1,w
   881  07C8  0020               	movlb	0	; select bank0
   882  07C9  00B3               	movwf	CalcError@position+1
   883  07CA  0870               	movf	?___lwdiv,w
   884  07CB  00B2               	movwf	CalcError@position
   885                           
   886                           ;MOD_Correction.c: 26: uint16_t proportional = position - 3500;
   887  07CC  0832               	movf	CalcError@position,w
   888  07CD  3E54               	addlw	84
   889  07CE  00BC               	movwf	CalcError@proportional
   890  07CF  30F2               	movlw	242
   891  07D0  3D33               	addwfc	CalcError@position+1,w
   892  07D1  00BD               	movwf	CalcError@proportional+1
   893                           
   894                           ;MOD_Correction.c: 27: static uint16_t _proportional = 0;
   895                           ;MOD_Correction.c: 28: static uint16_t integral = 0;
   896                           ;MOD_Correction.c: 29: integral += proportional;
   897  07D2  083C               	movf	CalcError@proportional,w
   898  07D3  07D1               	addwf	CalcError@integral,f
   899  07D4  083D               	movf	CalcError@proportional+1,w
   900  07D5  3DD2               	addwfc	CalcError@integral+1,f
   901                           
   902                           ;MOD_Correction.c: 30: uint16_t differential = proportional - _proportional;
   903  07D6  094F               	comf	CalcError@_proportional,w
   904  07D7  00F8               	movwf	??_CalcError
   905  07D8  0950               	comf	CalcError@_proportional+1,w
   906  07D9  00F9               	movwf	??_CalcError+1
   907  07DA  0AF8               	incf	??_CalcError,f
   908  07DB  1903               	skipnz
   909  07DC  0AF9               	incf	??_CalcError+1,f
   910  07DD  083C               	movf	CalcError@proportional,w
   911  07DE  0778               	addwf	??_CalcError,w
   912  07DF  00B4               	movwf	CalcError@differential
   913  07E0  083D               	movf	CalcError@proportional+1,w
   914  07E1  3D79               	addwfc	??_CalcError+1,w
   915  07E2  00B5               	movwf	CalcError@differential+1
   916                           
   917                           ;MOD_Correction.c: 31: uint16_t error = 1*+1*integral+1*differential;
   918  07E3  0834               	movf	CalcError@differential,w
   919  07E4  0751               	addwf	CalcError@integral,w
   920  07E5  00B0               	movwf	CalcError@error
   921  07E6  0835               	movf	CalcError@differential+1,w
   922  07E7  3D52               	addwfc	CalcError@integral+1,w
   923  07E8  00B1               	movwf	CalcError@error+1
   924                           
   925                           ;MOD_Correction.c: 32: _proportional = proportional;
   926  07E9  083D               	movf	CalcError@proportional+1,w
   927  07EA  00D0               	movwf	CalcError@_proportional+1
   928  07EB  083C               	movf	CalcError@proportional,w
   929  07EC  00CF               	movwf	CalcError@_proportional
   930                           
   931                           ;MOD_Correction.c: 35: else{
   932                           ;MOD_Correction.c: 36: return -1;
   933                           ;	Return value of _CalcError is never used
   934                           
   935                           ;MOD_Correction.c: 34: }
   936                           
   937                           ;MOD_Correction.c: 33: return error/1;
   938                           ;	Return value of _CalcError is never used
   939  07ED  0008               	return
   940  07EE                     __end_of_CalcError:	
   941                           
   942                           	psect	text2
   943  0717                     __ptext2:	
   944 ;; *************** function ___wmul *****************
   945 ;; Defined at:
   946 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  multiplier      2    0[COMMON] unsigned int 
   949 ;;  multiplicand    2    2[COMMON] unsigned int 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  product         2    4[COMMON] unsigned int 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  2    0[COMMON] unsigned int 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   964 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   965 ;;Total ram usage:        6 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_CalcError
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           
   975                           ;psect for function ___wmul
   976  0717                     ___wmul:	
   977                           
   978                           ;incstack = 0
   979                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   980  0717  01F4               	clrf	___wmul@product
   981  0718  01F5               	clrf	___wmul@product+1
   982  0719                     l482:	
   983  0719  1C70               	btfss	___wmul@multiplier,0
   984  071A  2F1F               	goto	l24
   985  071B  0872               	movf	___wmul@multiplicand,w
   986  071C  07F4               	addwf	___wmul@product,f
   987  071D  0873               	movf	___wmul@multiplicand+1,w
   988  071E  3DF5               	addwfc	___wmul@product+1,f
   989  071F                     l24:	
   990  071F  3001               	movlw	1
   991  0720                     u175:	
   992  0720  35F2               	lslf	___wmul@multiplicand,f
   993  0721  0DF3               	rlf	___wmul@multiplicand+1,f
   994  0722  0B89               	decfsz	9,f
   995  0723  2F20               	goto	u175
   996  0724  3001               	movlw	1
   997  0725                     u185:	
   998  0725  36F1               	lsrf	___wmul@multiplier+1,f
   999  0726  0CF0               	rrf	___wmul@multiplier,f
  1000  0727  0B89               	decfsz	9,f
  1001  0728  2F25               	goto	u185
  1002  0729  0870               	movf	___wmul@multiplier,w
  1003  072A  0471               	iorwf	___wmul@multiplier+1,w
  1004  072B  1D03               	btfss	3,2
  1005  072C  2F19               	goto	l482
  1006  072D  0875               	movf	___wmul@product+1,w
  1007  072E  00F1               	movwf	?___wmul+1
  1008  072F  0874               	movf	___wmul@product,w
  1009  0730  00F0               	movwf	?___wmul
  1010  0731  0008               	return
  1011  0732                     __end_of___wmul:	
  1012                           
  1013                           	psect	text3
  1014  0732                     __ptext3:	
  1015 ;; *************** function ___lwdiv *****************
  1016 ;; Defined at:
  1017 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  divisor         2    0[COMMON] unsigned int 
  1020 ;;  dividend        2    2[COMMON] unsigned int 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  quotient        2    5[COMMON] unsigned int 
  1023 ;;  counter         1    7[COMMON] unsigned char 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  2    0[COMMON] unsigned int 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1034 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1035 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1036 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1037 ;;Total ram usage:        8 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_CalcError
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           
  1047                           ;psect for function ___lwdiv
  1048  0732                     ___lwdiv:	
  1049                           
  1050                           ;incstack = 0
  1051                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1052  0732  01F5               	clrf	___lwdiv@quotient
  1053  0733  01F6               	clrf	___lwdiv@quotient+1
  1054  0734  0870               	movf	___lwdiv@divisor,w
  1055  0735  0471               	iorwf	___lwdiv@divisor+1,w
  1056  0736  1903               	btfsc	3,2
  1057  0737  2F61               	goto	l516
  1058  0738  01F7               	clrf	___lwdiv@counter
  1059  0739  0AF7               	incf	___lwdiv@counter,f
  1060  073A                     l504:	
  1061  073A  1BF1               	btfsc	___lwdiv@divisor+1,7
  1062  073B  2F46               	goto	l506
  1063  073C  3001               	movlw	1
  1064  073D                     u215:	
  1065  073D  35F0               	lslf	___lwdiv@divisor,f
  1066  073E  0DF1               	rlf	___lwdiv@divisor+1,f
  1067  073F  0B89               	decfsz	9,f
  1068  0740  2F3D               	goto	u215
  1069  0741  3001               	movlw	1
  1070  0742  00F4               	movwf	??___lwdiv
  1071  0743  0874               	movf	??___lwdiv,w
  1072  0744  07F7               	addwf	___lwdiv@counter,f
  1073  0745  2F3A               	goto	l504
  1074  0746                     l506:	
  1075  0746  3001               	movlw	1
  1076  0747                     u235:	
  1077  0747  35F5               	lslf	___lwdiv@quotient,f
  1078  0748  0DF6               	rlf	___lwdiv@quotient+1,f
  1079  0749  0B89               	decfsz	9,f
  1080  074A  2F47               	goto	u235
  1081  074B  0871               	movf	___lwdiv@divisor+1,w
  1082  074C  0273               	subwf	___lwdiv@dividend+1,w
  1083  074D  1D03               	skipz
  1084  074E  2F51               	goto	u245
  1085  074F  0870               	movf	___lwdiv@divisor,w
  1086  0750  0272               	subwf	___lwdiv@dividend,w
  1087  0751                     u245:	
  1088  0751  1C03               	skipc
  1089  0752  2F58               	goto	l512
  1090  0753  0870               	movf	___lwdiv@divisor,w
  1091  0754  02F2               	subwf	___lwdiv@dividend,f
  1092  0755  0871               	movf	___lwdiv@divisor+1,w
  1093  0756  3BF3               	subwfb	___lwdiv@dividend+1,f
  1094  0757  1475               	bsf	___lwdiv@quotient,0
  1095  0758                     l512:	
  1096  0758  3001               	movlw	1
  1097  0759                     u255:	
  1098  0759  36F1               	lsrf	___lwdiv@divisor+1,f
  1099  075A  0CF0               	rrf	___lwdiv@divisor,f
  1100  075B  0B89               	decfsz	9,f
  1101  075C  2F59               	goto	u255
  1102  075D  3001               	movlw	1
  1103  075E  02F7               	subwf	___lwdiv@counter,f
  1104  075F  1D03               	btfss	3,2
  1105  0760  2F46               	goto	l506
  1106  0761                     l516:	
  1107  0761  0876               	movf	___lwdiv@quotient+1,w
  1108  0762  00F1               	movwf	?___lwdiv+1
  1109  0763  0875               	movf	___lwdiv@quotient,w
  1110  0764  00F0               	movwf	?___lwdiv
  1111  0765  0008               	return
  1112  0766                     __end_of___lwdiv:	
  1113  007E                     btemp	set	126	;btemp
  1114  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      51
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_CalcError
    _CalcError->___lwdiv

Critical Paths under _main in BANK0

    _main->_CalcError

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4     944
                                             10 COMMON     4     0      4
                          _CalcError
 ---------------------------------------------------------------------------------
 (1) _CalcError                                           33    33      0     944
                                              8 COMMON     2     2      0
                                              0 BANK0     31    31      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcError
     ___lwdiv
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      33       5       63.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      41      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      41      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Feb 09 11:50:55 2017

                      l5 06FD           CalcError@error 0030                       l24 071F  
    ___wmul@multiplicand 0072                      l512 0758                      l504 073A  
                    l506 0746                      l516 0761                      l540 07B9  
                    l532 077E                      l482 0719                      u215 073D  
                    u235 0747                      u245 0751                      u270 0770  
                    u255 0759                      u175 0720                      u185 0725  
       CalcError@meanSum 0038                      wreg 0009         CalcError@sensors 0020  
                   _main 06FD                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 0002        CalcError@integral 0051        CalcError@position 0032  
                  ?_main 007A          __end_of___lwdiv 0766            _CalcError$321 0036  
                  status 0003                    wtemp0 007E       __size_of_CalcError 0088  
        __initialization 07EE             __end_of_main 0701                   ??_main 007E  
                 ___wmul 0717                ??___lwdiv 0074        __end_of_CalcError 07EE  
__end_of__initialization 07FD             CalcError@sum 003A           __pcstackCOMMON 0070  
           __pidataBANK0 0707               __pbssBANK0 004F               __pmaintext 06FD  
                ?___wmul 0070    CalcError@proportional 003C          __size_of___wmul 001B  
                ___lwdiv 0732                  __ptext1 0766                  __ptext2 0717  
                __ptext3 0732     end_of_initialization 07FD                  init_ram 0701  
                initloop 0702                _CalcError 0766   CalcError@_proportional 004F  
         __end_of___wmul 0732      start_initialization 07EE               ?_CalcError 0070  
               ??___wmul 0074              __pdataBANK0 003F                ___latbits 0002  
          __pcstackBANK0 0020    CalcError@differential 0034         ___lwdiv@dividend 0072  
               ?___lwdiv 0070         ___lwdiv@quotient 0075              ??_CalcError 0078  
         ___wmul@product 0074        ___wmul@multiplier 0070               CalcError@i 003E  
       __size_of___lwdiv 0034          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
          __size_of_main 0004                 main@argc 007A                 main@argv 007C  
        CalcError@F12167 003F  
