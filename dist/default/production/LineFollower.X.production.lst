

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Feb 10 16:00:21 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1619 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011C                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  018E                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  0197                     	;# 
   127  0199                     	;# 
   128  0199                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019A                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019D                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019E                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  020E                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  028C                     	;# 
   172  028D                     	;# 
   173  028E                     	;# 
   174  0291                     	;# 
   175  0291                     	;# 
   176  0292                     	;# 
   177  0293                     	;# 
   178  0294                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029E                     	;# 
   185  030C                     	;# 
   186  030D                     	;# 
   187  030E                     	;# 
   188  038C                     	;# 
   189  038D                     	;# 
   190  038E                     	;# 
   191  0391                     	;# 
   192  0392                     	;# 
   193  0393                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0397                     	;# 
   198  0398                     	;# 
   199  0399                     	;# 
   200  040E                     	;# 
   201  0413                     	;# 
   202  0413                     	;# 
   203  0414                     	;# 
   204  0414                     	;# 
   205  0415                     	;# 
   206  0416                     	;# 
   207  0417                     	;# 
   208  0418                     	;# 
   209  041A                     	;# 
   210  041A                     	;# 
   211  041B                     	;# 
   212  041B                     	;# 
   213  041C                     	;# 
   214  041D                     	;# 
   215  041E                     	;# 
   216  041F                     	;# 
   217  0493                     	;# 
   218  0494                     	;# 
   219  0495                     	;# 
   220  0496                     	;# 
   221  049A                     	;# 
   222  049B                     	;# 
   223  049C                     	;# 
   224  049D                     	;# 
   225  058C                     	;# 
   226  058C                     	;# 
   227  058D                     	;# 
   228  058E                     	;# 
   229  058E                     	;# 
   230  058F                     	;# 
   231  0590                     	;# 
   232  0590                     	;# 
   233  0591                     	;# 
   234  0592                     	;# 
   235  0592                     	;# 
   236  0593                     	;# 
   237  0594                     	;# 
   238  0594                     	;# 
   239  0595                     	;# 
   240  0596                     	;# 
   241  0596                     	;# 
   242  0597                     	;# 
   243  0598                     	;# 
   244  0599                     	;# 
   245  059A                     	;# 
   246  059B                     	;# 
   247  059B                     	;# 
   248  059C                     	;# 
   249  059D                     	;# 
   250  060C                     	;# 
   251  060C                     	;# 
   252  060D                     	;# 
   253  060E                     	;# 
   254  060F                     	;# 
   255  060F                     	;# 
   256  0610                     	;# 
   257  0611                     	;# 
   258  0612                     	;# 
   259  0613                     	;# 
   260  0614                     	;# 
   261  0617                     	;# 
   262  0618                     	;# 
   263  0619                     	;# 
   264  061A                     	;# 
   265  061B                     	;# 
   266  061C                     	;# 
   267  0691                     	;# 
   268  0692                     	;# 
   269  0693                     	;# 
   270  0694                     	;# 
   271  0695                     	;# 
   272  0696                     	;# 
   273  0697                     	;# 
   274  0699                     	;# 
   275  069A                     	;# 
   276  0711                     	;# 
   277  0712                     	;# 
   278  0713                     	;# 
   279  0714                     	;# 
   280  0715                     	;# 
   281  0718                     	;# 
   282  0718                     	;# 
   283  0719                     	;# 
   284  071A                     	;# 
   285  071A                     	;# 
   286  071B                     	;# 
   287  071C                     	;# 
   288  071D                     	;# 
   289  0791                     	;# 
   290  0791                     	;# 
   291  0792                     	;# 
   292  0793                     	;# 
   293  0793                     	;# 
   294  0794                     	;# 
   295  0795                     	;# 
   296  0795                     	;# 
   297  0796                     	;# 
   298  0797                     	;# 
   299  0797                     	;# 
   300  0798                     	;# 
   301  0799                     	;# 
   302  079A                     	;# 
   303  080C                     	;# 
   304  080C                     	;# 
   305  080D                     	;# 
   306  080E                     	;# 
   307  080E                     	;# 
   308  080F                     	;# 
   309  0810                     	;# 
   310  0810                     	;# 
   311  0811                     	;# 
   312  0812                     	;# 
   313  0812                     	;# 
   314  0813                     	;# 
   315  0814                     	;# 
   316  0815                     	;# 
   317  0816                     	;# 
   318  0817                     	;# 
   319  0818                     	;# 
   320  0819                     	;# 
   321  081A                     	;# 
   322  081A                     	;# 
   323  081B                     	;# 
   324  081C                     	;# 
   325  081C                     	;# 
   326  081D                     	;# 
   327  088C                     	;# 
   328  088D                     	;# 
   329  088E                     	;# 
   330  088F                     	;# 
   331  088F                     	;# 
   332  0890                     	;# 
   333  0891                     	;# 
   334  0892                     	;# 
   335  0893                     	;# 
   336  0893                     	;# 
   337  0894                     	;# 
   338  0895                     	;# 
   339  0896                     	;# 
   340  0897                     	;# 
   341  0897                     	;# 
   342  0898                     	;# 
   343  0899                     	;# 
   344  0D8C                     	;# 
   345  0D8C                     	;# 
   346  0D8D                     	;# 
   347  0D8E                     	;# 
   348  0D8F                     	;# 
   349  0D8F                     	;# 
   350  0D90                     	;# 
   351  0D91                     	;# 
   352  0D92                     	;# 
   353  0D92                     	;# 
   354  0D93                     	;# 
   355  0D94                     	;# 
   356  0D95                     	;# 
   357  0D95                     	;# 
   358  0D96                     	;# 
   359  0D97                     	;# 
   360  0D98                     	;# 
   361  0D99                     	;# 
   362  0D9A                     	;# 
   363  0D9B                     	;# 
   364  0D9C                     	;# 
   365  0D9D                     	;# 
   366  0D9E                     	;# 
   367  0D9E                     	;# 
   368  0D9F                     	;# 
   369  0DA0                     	;# 
   370  0DA1                     	;# 
   371  0DA1                     	;# 
   372  0DA2                     	;# 
   373  0DA3                     	;# 
   374  0DA4                     	;# 
   375  0DA4                     	;# 
   376  0DA5                     	;# 
   377  0DA6                     	;# 
   378  0DA7                     	;# 
   379  0DA7                     	;# 
   380  0DA8                     	;# 
   381  0DA9                     	;# 
   382  0DAA                     	;# 
   383  0DAB                     	;# 
   384  0DAC                     	;# 
   385  0DAD                     	;# 
   386  0DAE                     	;# 
   387  0DAF                     	;# 
   388  0E0F                     	;# 
   389  0E10                     	;# 
   390  0E11                     	;# 
   391  0E12                     	;# 
   392  0E13                     	;# 
   393  0E14                     	;# 
   394  0E15                     	;# 
   395  0E16                     	;# 
   396  0E17                     	;# 
   397  0E18                     	;# 
   398  0E19                     	;# 
   399  0E1A                     	;# 
   400  0E1B                     	;# 
   401  0E1C                     	;# 
   402  0E1D                     	;# 
   403  0E1E                     	;# 
   404  0E1F                     	;# 
   405  0E20                     	;# 
   406  0E21                     	;# 
   407  0E22                     	;# 
   408  0E23                     	;# 
   409  0E24                     	;# 
   410  0E25                     	;# 
   411  0E26                     	;# 
   412  0E27                     	;# 
   413  0E28                     	;# 
   414  0E29                     	;# 
   415  0E2A                     	;# 
   416  0E2B                     	;# 
   417  0E2C                     	;# 
   418  0E2D                     	;# 
   419  0E2E                     	;# 
   420  0E90                     	;# 
   421  0E91                     	;# 
   422  0E92                     	;# 
   423  0E94                     	;# 
   424  0E95                     	;# 
   425  0E9C                     	;# 
   426  0E9D                     	;# 
   427  0E9E                     	;# 
   428  0E9F                     	;# 
   429  0EA0                     	;# 
   430  0EA1                     	;# 
   431  0EA2                     	;# 
   432  0EA3                     	;# 
   433  0EA4                     	;# 
   434  0EA5                     	;# 
   435  0EA6                     	;# 
   436  0EA7                     	;# 
   437  0F0F                     	;# 
   438  0F10                     	;# 
   439  0F11                     	;# 
   440  0F12                     	;# 
   441  0F13                     	;# 
   442  0F14                     	;# 
   443  0F15                     	;# 
   444  0F16                     	;# 
   445  0F17                     	;# 
   446  0F18                     	;# 
   447  0F19                     	;# 
   448  0F1A                     	;# 
   449  0F1B                     	;# 
   450  0F1C                     	;# 
   451  0F1D                     	;# 
   452  0F1E                     	;# 
   453  0F1F                     	;# 
   454  0F20                     	;# 
   455  0F21                     	;# 
   456  0F22                     	;# 
   457  0F23                     	;# 
   458  0F24                     	;# 
   459  0F25                     	;# 
   460  0F26                     	;# 
   461  0F27                     	;# 
   462  0F28                     	;# 
   463  0F29                     	;# 
   464  0F2A                     	;# 
   465  0F2B                     	;# 
   466  0F2C                     	;# 
   467  0F2D                     	;# 
   468  0F2E                     	;# 
   469  0F2F                     	;# 
   470  0F30                     	;# 
   471  0F31                     	;# 
   472  0F32                     	;# 
   473  0F33                     	;# 
   474  0F34                     	;# 
   475  0F35                     	;# 
   476  0F36                     	;# 
   477  0F37                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489                           
   490                           	psect	cinit
   491  07F6                     start_initialization:	
   492                           ; #config settings
   493                           
   494  07F6                     __initialization:	
   495                           
   496                           ; Clear objects allocated to BANK0
   497  07F6  303F               	movlw	low __pbssBANK0
   498  07F7  0084               	movwf	4
   499  07F8  3000               	movlw	high __pbssBANK0
   500  07F9  0085               	movwf	5
   501  07FA  3014               	movlw	20
   502  07FB  3186  26FB         	fcall	clear_ram0
   503  07FD                     end_of_initialization:	
   504                           ;End of C runtime variable initialization code
   505                           
   506  07FD                     __end_of__initialization:	
   507  07FD  0020               	movlb	0
   508  07FE  3187  2F01         	ljmp	_main	;jump to C main() function
   509                           
   510                           	psect	bssBANK0
   511  003F                     __pbssBANK0:	
   512  003F                     CalcError@F12167:	
   513  003F                     	ds	16
   514  004F                     CalcError@_proportional:	
   515  004F                     	ds	2
   516  0051                     CalcError@integral:	
   517  0051                     	ds	2
   518                           
   519                           	psect	clrtext
   520  06FB                     clear_ram0:	
   521                           ;	Called with FSR0 containing the base address, and
   522                           ;	WREG with the size to clear
   523                           
   524  06FB  0064               	clrwdt	;clear the watchdog before getting into this loop
   525  06FC                     clrloop0:	
   526  06FC  0180               	clrf	0	;clear RAM location pointed to by FSR
   527  06FD  3101               	addfsr 0,1
   528  06FE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   529  06FF  2EFC               	goto	clrloop0	;have we reached the end yet?
   530  0700  3400               	retlw	0	;all done for this memory range, return
   531                           
   532                           	psect	cstackCOMMON
   533  0070                     __pcstackCOMMON:	
   534  0070                     ?_main:	
   535  0070                     ?___wmul:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?___lwdiv:	
   539                           ; 2 bytes @ 0x0
   540                           
   541  0070                     ___wmul@multiplier:	
   542                           ; 2 bytes @ 0x0
   543                           
   544  0070                     ___lwdiv@divisor:	
   545                           ; 2 bytes @ 0x0
   546                           
   547                           
   548                           ; 2 bytes @ 0x0
   549  0070                     	ds	2
   550  0072                     ___wmul@multiplicand:	
   551  0072                     ___lwdiv@dividend:	
   552                           ; 2 bytes @ 0x2
   553                           
   554                           
   555                           ; 2 bytes @ 0x2
   556  0072                     	ds	2
   557  0074                     ??___wmul:	
   558  0074                     ??___lwdiv:	
   559                           ; 1 bytes @ 0x4
   560                           
   561  0074                     ___wmul@product:	
   562                           ; 1 bytes @ 0x4
   563                           
   564                           
   565                           ; 2 bytes @ 0x4
   566  0074                     	ds	1
   567  0075                     ___lwdiv@quotient:	
   568                           
   569                           ; 2 bytes @ 0x5
   570  0075                     	ds	2
   571  0077                     ___lwdiv@counter:	
   572                           
   573                           ; 1 bytes @ 0x7
   574  0077                     	ds	1
   575  0078                     ?_CalcError:	
   576                           
   577                           ; 2 bytes @ 0x8
   578  0078                     	ds	2
   579  007A                     ??_CalcError:	
   580                           
   581                           ; 1 bytes @ 0xA
   582  007A                     	ds	2
   583  007C                     ??_main:	
   584  007C                     main@asdf:	
   585                           ; 1 bytes @ 0xC
   586                           
   587                           
   588                           ; 2 bytes @ 0xC
   589  007C                     	ds	2
   590                           
   591                           	psect	cstackBANK0
   592  0020                     __pcstackBANK0:	
   593  0020                     CalcError@sensors:	
   594                           
   595                           ; 16 bytes @ 0x0
   596  0020                     	ds	16
   597  0030                     CalcError@position:	
   598                           
   599                           ; 2 bytes @ 0x10
   600  0030                     	ds	2
   601  0032                     CalcError@differential:	
   602                           
   603                           ; 2 bytes @ 0x12
   604  0032                     	ds	2
   605  0034                     CalcError@error:	
   606                           
   607                           ; 2 bytes @ 0x14
   608  0034                     	ds	2
   609  0036                     _CalcError$320:	
   610                           
   611                           ; 2 bytes @ 0x16
   612  0036                     	ds	2
   613  0038                     CalcError@meanSum:	
   614                           
   615                           ; 2 bytes @ 0x18
   616  0038                     	ds	2
   617  003A                     CalcError@sum:	
   618                           
   619                           ; 2 bytes @ 0x1A
   620  003A                     	ds	2
   621  003C                     CalcError@proportional:	
   622                           
   623                           ; 2 bytes @ 0x1C
   624  003C                     	ds	2
   625  003E                     CalcError@i:	
   626                           
   627                           ; 1 bytes @ 0x1E
   628  003E                     	ds	1
   629                           
   630                           	psect	maintext
   631  0701                     __pmaintext:	
   632 ;;
   633 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   634 ;;
   635 ;; *************** function _main *****************
   636 ;; Defined at:
   637 ;;		line 17 in file "main.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  asdf            2   12[COMMON] int 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : B1F/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   652 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   655 ;;Total ram usage:        2 bytes
   656 ;; Hardware stack levels required when called:    2
   657 ;; This function calls:
   658 ;;		_CalcError
   659 ;; This function is called by:
   660 ;;		Startup code after reset
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           
   665                           ;psect for function _main
   666  0701                     _main:	
   667  0701                     l5:	
   668                           ;incstack = 0
   669                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   670                           ;main.c: 19: for(;;){
   671                           
   672                           
   673                           ;main.c: 20: int asdf = 0;
   674  0701  01FC               	clrf	main@asdf
   675  0702  01FD               	clrf	main@asdf+1
   676                           
   677                           ;main.c: 21: asdf = CalcError();
   678  0703  3187  275A  3187   	fcall	_CalcError
   679  0706  0879               	movf	?_CalcError+1,w
   680  0707  00FD               	movwf	main@asdf+1
   681  0708  0878               	movf	?_CalcError,w
   682  0709  00FC               	movwf	main@asdf
   683                           
   684                           ;main.c: 22: }
   685  070A  2F01               	goto	l5
   686  070B                     __end_of_main:	
   687                           
   688                           	psect	text1
   689  075A                     __ptext1:	
   690 ;; *************** function _CalcError *****************
   691 ;; Defined at:
   692 ;;		line 10 in file "MOD_Correction.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  proportional    2   28[BANK0 ] unsigned int 
   697 ;;  error           2   20[BANK0 ] unsigned int 
   698 ;;  differential    2   18[BANK0 ] unsigned int 
   699 ;;  position        2   16[BANK0 ] unsigned int 
   700 ;;  i               1   30[BANK0 ] unsigned char 
   701 ;;  sensors        16    0[BANK0 ] unsigned int [8]
   702 ;;  sum             2   26[BANK0 ] unsigned int 
   703 ;;  meanSum         2   24[BANK0 ] unsigned int 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  2    8[COMMON] int 
   706 ;; Registers used:
   707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   714 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
   715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   716 ;;      Totals:         4      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
   717 ;;Total ram usage:       35 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    1
   720 ;; This function calls:
   721 ;;		___lwdiv
   722 ;;		___wmul
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           
   729                           ;psect for function _CalcError
   730  075A                     _CalcError:	
   731                           
   732                           ;MOD_Correction.c: 11: unsigned int sensors[]={0,0,0,0,0,0,0,0};
   733                           
   734                           ;incstack = 0
   735                           ; Regs used in _CalcError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   736  075A  303F               	movlw	low CalcError@F12167
   737  075B  0086               	movwf	6
   738  075C  3000               	movlw	high CalcError@F12167
   739  075D  0087               	movwf	7
   740  075E  3020               	movlw	low CalcError@sensors
   741  075F  0084               	movwf	4
   742  0760  3000               	movlw	high CalcError@sensors
   743  0761  0085               	movwf	5
   744  0762  3010               	movlw	16
   745  0763  00FA               	movwf	??_CalcError
   746  0764                     u270:	
   747  0764  0016               	moviw fsr1++
   748  0765  001A               	movwi fsr0++
   749  0766  0BFA               	decfsz	??_CalcError,f
   750  0767  2F64               	goto	u270
   751                           
   752                           ;MOD_Correction.c: 12: unsigned int meanSum = 0;
   753  0768  0020               	movlb	0	; select bank0
   754  0769  01B8               	clrf	CalcError@meanSum
   755  076A  01B9               	clrf	CalcError@meanSum+1
   756                           
   757                           ;MOD_Correction.c: 13: unsigned int sum = 0;
   758  076B  01BA               	clrf	CalcError@sum
   759  076C  01BB               	clrf	CalcError@sum+1
   760                           
   761                           ;MOD_Correction.c: 14: for (char i = 0; i < 6; i++){
   762  076D  01BE               	clrf	CalcError@i
   763  076E  3006               	movlw	6
   764  076F  023E               	subwf	CalcError@i,w
   765  0770  1803               	btfsc	3,0
   766  0771  2FAD               	goto	l548
   767  0772                     l540:	
   768                           
   769                           ;MOD_Correction.c: 17: meanSum += sensors[i]*i*1000;
   770  0772  083E               	movf	CalcError@i,w
   771  0773  00FA               	movwf	??_CalcError
   772  0774  01FB               	clrf	??_CalcError+1
   773  0775  087A               	movf	??_CalcError,w
   774  0776  00F0               	movwf	___wmul@multiplier
   775  0777  087B               	movf	??_CalcError+1,w
   776  0778  00F1               	movwf	___wmul@multiplier+1
   777  0779  353E               	lslf	CalcError@i,w
   778  077A  3E20               	addlw	(low (CalcError@sensors| 0))& (0+255)
   779  077B  0086               	movwf	6
   780  077C  0187               	clrf	7
   781  077D  3F40               	moviw [0]fsr1
   782  077E  00F2               	movwf	___wmul@multiplicand
   783  077F  3F41               	moviw [1]fsr1
   784  0780  00F3               	movwf	___wmul@multiplicand+1
   785  0781  3187  270B  3187   	fcall	___wmul
   786  0784  0871               	movf	?___wmul+1,w
   787  0785  0020               	movlb	0	; select bank0
   788  0786  00B7               	movwf	_CalcError$320+1
   789  0787  0870               	movf	?___wmul,w
   790  0788  00B6               	movwf	_CalcError$320
   791                           
   792                           ;MOD_Correction.c: 17: meanSum += sensors[i]*i*1000;
   793  0789  0837               	movf	_CalcError$320+1,w
   794  078A  00F1               	movwf	___wmul@multiplier+1
   795  078B  0836               	movf	_CalcError$320,w
   796  078C  00F0               	movwf	___wmul@multiplier
   797  078D  30E8               	movlw	232
   798  078E  00F2               	movwf	___wmul@multiplicand
   799  078F  3003               	movlw	3
   800  0790  00F3               	movwf	___wmul@multiplicand+1
   801  0791  3187  270B  3187   	fcall	___wmul
   802  0794  0870               	movf	?___wmul,w
   803  0795  0020               	movlb	0	; select bank0
   804  0796  07B8               	addwf	CalcError@meanSum,f
   805  0797  0871               	movf	?___wmul+1,w
   806  0798  3DB9               	addwfc	CalcError@meanSum+1,f
   807                           
   808                           ;MOD_Correction.c: 18: sum += sensors[i];
   809  0799  353E               	lslf	CalcError@i,w
   810  079A  3E20               	addlw	(low (CalcError@sensors| 0))& (0+255)
   811  079B  0086               	movwf	6
   812  079C  0187               	clrf	7
   813  079D  3F40               	moviw [0]fsr1
   814  079E  00FA               	movwf	??_CalcError
   815  079F  3F41               	moviw [1]fsr1
   816  07A0  00FB               	movwf	??_CalcError+1
   817  07A1  087A               	movf	??_CalcError,w
   818  07A2  07BA               	addwf	CalcError@sum,f
   819  07A3  087B               	movf	??_CalcError+1,w
   820  07A4  3DBB               	addwfc	CalcError@sum+1,f
   821  07A5  3001               	movlw	1
   822  07A6  00FA               	movwf	??_CalcError
   823  07A7  087A               	movf	??_CalcError,w
   824  07A8  07BE               	addwf	CalcError@i,f
   825  07A9  3006               	movlw	6
   826  07AA  023E               	subwf	CalcError@i,w
   827  07AB  1C03               	skipc
   828  07AC  2F72               	goto	l540
   829  07AD                     l548:	
   830                           
   831                           ;MOD_Correction.c: 19: }
   832                           ;MOD_Correction.c: 20: if (sum!=0){
   833  07AD  083A               	movf	CalcError@sum,w
   834  07AE  043B               	iorwf	CalcError@sum+1,w
   835  07AF  1903               	btfsc	3,2
   836  07B0  2FF1               	goto	l568
   837                           
   838                           ;MOD_Correction.c: 21: unsigned int position = meanSum/sum;
   839  07B1  083B               	movf	CalcError@sum+1,w
   840  07B2  00F1               	movwf	___lwdiv@divisor+1
   841  07B3  083A               	movf	CalcError@sum,w
   842  07B4  00F0               	movwf	___lwdiv@divisor
   843  07B5  0839               	movf	CalcError@meanSum+1,w
   844  07B6  00F3               	movwf	___lwdiv@dividend+1
   845  07B7  0838               	movf	CalcError@meanSum,w
   846  07B8  00F2               	movwf	___lwdiv@dividend
   847  07B9  3187  2726  3187   	fcall	___lwdiv
   848  07BC  0871               	movf	?___lwdiv+1,w
   849  07BD  0020               	movlb	0	; select bank0
   850  07BE  00B1               	movwf	CalcError@position+1
   851  07BF  0870               	movf	?___lwdiv,w
   852  07C0  00B0               	movwf	CalcError@position
   853                           
   854                           ;MOD_Correction.c: 22: unsigned int proportional = position - 3500;
   855  07C1  0830               	movf	CalcError@position,w
   856  07C2  3E54               	addlw	84
   857  07C3  00BC               	movwf	CalcError@proportional
   858  07C4  30F2               	movlw	242
   859  07C5  3D31               	addwfc	CalcError@position+1,w
   860  07C6  00BD               	movwf	CalcError@proportional+1
   861                           
   862                           ;MOD_Correction.c: 23: static unsigned int _proportional = 0;
   863                           ;MOD_Correction.c: 24: static unsigned int integral = 0;
   864                           ;MOD_Correction.c: 25: integral += proportional;
   865  07C7  083C               	movf	CalcError@proportional,w
   866  07C8  07D1               	addwf	CalcError@integral,f
   867  07C9  083D               	movf	CalcError@proportional+1,w
   868  07CA  3DD2               	addwfc	CalcError@integral+1,f
   869                           
   870                           ;MOD_Correction.c: 26: unsigned int differential = proportional - _proportional;
   871  07CB  094F               	comf	CalcError@_proportional,w
   872  07CC  00FA               	movwf	??_CalcError
   873  07CD  0950               	comf	CalcError@_proportional+1,w
   874  07CE  00FB               	movwf	??_CalcError+1
   875  07CF  0AFA               	incf	??_CalcError,f
   876  07D0  1903               	skipnz
   877  07D1  0AFB               	incf	??_CalcError+1,f
   878  07D2  083C               	movf	CalcError@proportional,w
   879  07D3  077A               	addwf	??_CalcError,w
   880  07D4  00B2               	movwf	CalcError@differential
   881  07D5  083D               	movf	CalcError@proportional+1,w
   882  07D6  3D7B               	addwfc	??_CalcError+1,w
   883  07D7  00B3               	movwf	CalcError@differential+1
   884                           
   885                           ;MOD_Correction.c: 27: unsigned int error = 1*+1*integral+1*differential;
   886  07D8  0832               	movf	CalcError@differential,w
   887  07D9  0751               	addwf	CalcError@integral,w
   888  07DA  00B4               	movwf	CalcError@error
   889  07DB  0833               	movf	CalcError@differential+1,w
   890  07DC  3D52               	addwfc	CalcError@integral+1,w
   891  07DD  00B5               	movwf	CalcError@error+1
   892                           
   893                           ;MOD_Correction.c: 28: _proportional = proportional;
   894  07DE  083D               	movf	CalcError@proportional+1,w
   895  07DF  00D0               	movwf	CalcError@_proportional+1
   896  07E0  083C               	movf	CalcError@proportional,w
   897  07E1  00CF               	movwf	CalcError@_proportional
   898                           
   899                           ;MOD_Correction.c: 29: return error/1000;
   900  07E2  30E8               	movlw	232
   901  07E3  00F0               	movwf	___lwdiv@divisor
   902  07E4  3003               	movlw	3
   903  07E5  00F1               	movwf	___lwdiv@divisor+1
   904  07E6  0835               	movf	CalcError@error+1,w
   905  07E7  00F3               	movwf	___lwdiv@dividend+1
   906  07E8  0834               	movf	CalcError@error,w
   907  07E9  00F2               	movwf	___lwdiv@dividend
   908  07EA  3187  2726         	fcall	___lwdiv
   909  07EC  0871               	movf	?___lwdiv+1,w
   910  07ED  00F9               	movwf	?_CalcError+1
   911  07EE  0870               	movf	?___lwdiv,w
   912  07EF  00F8               	movwf	?_CalcError
   913                           
   914                           ;MOD_Correction.c: 30: }
   915  07F0  0008               	return
   916  07F1                     l568:	
   917                           
   918                           ;MOD_Correction.c: 31: else{
   919                           ;MOD_Correction.c: 32: return -1;
   920  07F1  30FF               	movlw	255
   921  07F2  00F8               	movwf	?_CalcError
   922  07F3  30FF               	movlw	255
   923  07F4  00F9               	movwf	?_CalcError+1
   924  07F5  0008               	return
   925  07F6                     __end_of_CalcError:	
   926                           
   927                           	psect	text2
   928  070B                     __ptext2:	
   929 ;; *************** function ___wmul *****************
   930 ;; Defined at:
   931 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  multiplier      2    0[COMMON] unsigned int 
   934 ;;  multiplicand    2    2[COMMON] unsigned int 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  product         2    4[COMMON] unsigned int 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  2    0[COMMON] unsigned int 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   949 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   950 ;;Total ram usage:        6 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_CalcError
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           
   960                           ;psect for function ___wmul
   961  070B                     ___wmul:	
   962                           
   963                           ;incstack = 0
   964                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   965  070B  01F4               	clrf	___wmul@product
   966  070C  01F5               	clrf	___wmul@product+1
   967  070D                     l490:	
   968  070D  1C70               	btfss	___wmul@multiplier,0
   969  070E  2F13               	goto	l24
   970  070F  0872               	movf	___wmul@multiplicand,w
   971  0710  07F4               	addwf	___wmul@product,f
   972  0711  0873               	movf	___wmul@multiplicand+1,w
   973  0712  3DF5               	addwfc	___wmul@product+1,f
   974  0713                     l24:	
   975  0713  3001               	movlw	1
   976  0714                     u175:	
   977  0714  35F2               	lslf	___wmul@multiplicand,f
   978  0715  0DF3               	rlf	___wmul@multiplicand+1,f
   979  0716  0B89               	decfsz	9,f
   980  0717  2F14               	goto	u175
   981  0718  3001               	movlw	1
   982  0719                     u185:	
   983  0719  36F1               	lsrf	___wmul@multiplier+1,f
   984  071A  0CF0               	rrf	___wmul@multiplier,f
   985  071B  0B89               	decfsz	9,f
   986  071C  2F19               	goto	u185
   987  071D  0870               	movf	___wmul@multiplier,w
   988  071E  0471               	iorwf	___wmul@multiplier+1,w
   989  071F  1D03               	btfss	3,2
   990  0720  2F0D               	goto	l490
   991  0721  0875               	movf	___wmul@product+1,w
   992  0722  00F1               	movwf	?___wmul+1
   993  0723  0874               	movf	___wmul@product,w
   994  0724  00F0               	movwf	?___wmul
   995  0725  0008               	return
   996  0726                     __end_of___wmul:	
   997                           
   998                           	psect	text3
   999  0726                     __ptext3:	
  1000 ;; *************** function ___lwdiv *****************
  1001 ;; Defined at:
  1002 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  divisor         2    0[COMMON] unsigned int 
  1005 ;;  dividend        2    2[COMMON] unsigned int 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  quotient        2    5[COMMON] unsigned int 
  1008 ;;  counter         1    7[COMMON] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  2    0[COMMON] unsigned int 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1019 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1020 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1021 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1022 ;;Total ram usage:        8 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_CalcError
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function ___lwdiv
  1033  0726                     ___lwdiv:	
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1037  0726  01F5               	clrf	___lwdiv@quotient
  1038  0727  01F6               	clrf	___lwdiv@quotient+1
  1039  0728  0870               	movf	___lwdiv@divisor,w
  1040  0729  0471               	iorwf	___lwdiv@divisor+1,w
  1041  072A  1903               	btfsc	3,2
  1042  072B  2F55               	goto	l524
  1043  072C  01F7               	clrf	___lwdiv@counter
  1044  072D  0AF7               	incf	___lwdiv@counter,f
  1045  072E                     l512:	
  1046  072E  1BF1               	btfsc	___lwdiv@divisor+1,7
  1047  072F  2F3A               	goto	l514
  1048  0730  3001               	movlw	1
  1049  0731                     u215:	
  1050  0731  35F0               	lslf	___lwdiv@divisor,f
  1051  0732  0DF1               	rlf	___lwdiv@divisor+1,f
  1052  0733  0B89               	decfsz	9,f
  1053  0734  2F31               	goto	u215
  1054  0735  3001               	movlw	1
  1055  0736  00F4               	movwf	??___lwdiv
  1056  0737  0874               	movf	??___lwdiv,w
  1057  0738  07F7               	addwf	___lwdiv@counter,f
  1058  0739  2F2E               	goto	l512
  1059  073A                     l514:	
  1060  073A  3001               	movlw	1
  1061  073B                     u235:	
  1062  073B  35F5               	lslf	___lwdiv@quotient,f
  1063  073C  0DF6               	rlf	___lwdiv@quotient+1,f
  1064  073D  0B89               	decfsz	9,f
  1065  073E  2F3B               	goto	u235
  1066  073F  0871               	movf	___lwdiv@divisor+1,w
  1067  0740  0273               	subwf	___lwdiv@dividend+1,w
  1068  0741  1D03               	skipz
  1069  0742  2F45               	goto	u245
  1070  0743  0870               	movf	___lwdiv@divisor,w
  1071  0744  0272               	subwf	___lwdiv@dividend,w
  1072  0745                     u245:	
  1073  0745  1C03               	skipc
  1074  0746  2F4C               	goto	l520
  1075  0747  0870               	movf	___lwdiv@divisor,w
  1076  0748  02F2               	subwf	___lwdiv@dividend,f
  1077  0749  0871               	movf	___lwdiv@divisor+1,w
  1078  074A  3BF3               	subwfb	___lwdiv@dividend+1,f
  1079  074B  1475               	bsf	___lwdiv@quotient,0
  1080  074C                     l520:	
  1081  074C  3001               	movlw	1
  1082  074D                     u255:	
  1083  074D  36F1               	lsrf	___lwdiv@divisor+1,f
  1084  074E  0CF0               	rrf	___lwdiv@divisor,f
  1085  074F  0B89               	decfsz	9,f
  1086  0750  2F4D               	goto	u255
  1087  0751  3001               	movlw	1
  1088  0752  02F7               	subwf	___lwdiv@counter,f
  1089  0753  1D03               	btfss	3,2
  1090  0754  2F3A               	goto	l514
  1091  0755                     l524:	
  1092  0755  0876               	movf	___lwdiv@quotient+1,w
  1093  0756  00F1               	movwf	?___lwdiv+1
  1094  0757  0875               	movf	___lwdiv@quotient,w
  1095  0758  00F0               	movwf	?___lwdiv
  1096  0759  0008               	return
  1097  075A                     __end_of___lwdiv:	
  1098  007E                     btemp	set	126	;btemp
  1099  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      51
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_CalcError
    _CalcError->___lwdiv

Critical Paths under _main in BANK0

    _main->_CalcError

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1068
                                             12 COMMON     2     2      0
                          _CalcError
 ---------------------------------------------------------------------------------
 (1) _CalcError                                           35    33      2    1066
                                              8 COMMON     4     2      2
                                              0 BANK0     31    31      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcError
     ___lwdiv
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      33       5       63.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      41      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      41      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Feb 10 16:00:21 2017

                      l5 0701           CalcError@error 0034                       l24 0713  
    ___wmul@multiplicand 0072                      l520 074C                      l512 072E  
                    l514 073A                      l524 0755                      l540 0772  
                    l490 070D                      l548 07AD                      l568 07F1  
                    u215 0731                      u235 073B                      u245 0745  
                    u270 0764                      u255 074D                      u175 0714  
                    u185 0719         CalcError@meanSum 0038                      wreg 0009  
       CalcError@sensors 0020                     _main 0701                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
      CalcError@integral 0051        CalcError@position 0030                    ?_main 0070  
        __end_of___lwdiv 075A            _CalcError$320 0036                    status 0003  
                  wtemp0 007E       __size_of_CalcError 009C          __initialization 07F6  
           __end_of_main 070B                   ??_main 007C                   ___wmul 070B  
              ??___lwdiv 0074        __end_of_CalcError 07F6  __end_of__initialization 07FD  
           CalcError@sum 003A           __pcstackCOMMON 0070               __pbssBANK0 003F  
             __pmaintext 0701                  ?___wmul 0070    CalcError@proportional 003C  
        __size_of___wmul 001B                  ___lwdiv 0726                  __ptext1 075A  
                __ptext2 070B                  __ptext3 0726                  clrloop0 06FC  
   end_of_initialization 07FD                _CalcError 075A   CalcError@_proportional 004F  
         __end_of___wmul 0726      start_initialization 07F6               ?_CalcError 0078  
               ??___wmul 0074                ___latbits 0002            __pcstackBANK0 0020  
  CalcError@differential 0032         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
       ___lwdiv@quotient 0075              ??_CalcError 007A           ___wmul@product 0074  
              clear_ram0 06FB        ___wmul@multiplier 0070               CalcError@i 003E  
       __size_of___lwdiv 0034          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
          __size_of_main 000A                 main@asdf 007C          CalcError@F12167 003F  
