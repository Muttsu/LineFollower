

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Feb 10 11:23:19 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1619 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011C                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  018E                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  0197                     	;# 
   127  0199                     	;# 
   128  0199                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019A                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019D                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019E                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  020E                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  028C                     	;# 
   172  028D                     	;# 
   173  028E                     	;# 
   174  0291                     	;# 
   175  0291                     	;# 
   176  0292                     	;# 
   177  0293                     	;# 
   178  0294                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029E                     	;# 
   185  030C                     	;# 
   186  030D                     	;# 
   187  030E                     	;# 
   188  038C                     	;# 
   189  038D                     	;# 
   190  038E                     	;# 
   191  0391                     	;# 
   192  0392                     	;# 
   193  0393                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0397                     	;# 
   198  0398                     	;# 
   199  0399                     	;# 
   200  040E                     	;# 
   201  0413                     	;# 
   202  0413                     	;# 
   203  0414                     	;# 
   204  0414                     	;# 
   205  0415                     	;# 
   206  0416                     	;# 
   207  0417                     	;# 
   208  0418                     	;# 
   209  041A                     	;# 
   210  041A                     	;# 
   211  041B                     	;# 
   212  041B                     	;# 
   213  041C                     	;# 
   214  041D                     	;# 
   215  041E                     	;# 
   216  041F                     	;# 
   217  0493                     	;# 
   218  0494                     	;# 
   219  0495                     	;# 
   220  0496                     	;# 
   221  049A                     	;# 
   222  049B                     	;# 
   223  049C                     	;# 
   224  049D                     	;# 
   225  058C                     	;# 
   226  058C                     	;# 
   227  058D                     	;# 
   228  058E                     	;# 
   229  058E                     	;# 
   230  058F                     	;# 
   231  0590                     	;# 
   232  0590                     	;# 
   233  0591                     	;# 
   234  0592                     	;# 
   235  0592                     	;# 
   236  0593                     	;# 
   237  0594                     	;# 
   238  0594                     	;# 
   239  0595                     	;# 
   240  0596                     	;# 
   241  0596                     	;# 
   242  0597                     	;# 
   243  0598                     	;# 
   244  0599                     	;# 
   245  059A                     	;# 
   246  059B                     	;# 
   247  059B                     	;# 
   248  059C                     	;# 
   249  059D                     	;# 
   250  060C                     	;# 
   251  060C                     	;# 
   252  060D                     	;# 
   253  060E                     	;# 
   254  060F                     	;# 
   255  060F                     	;# 
   256  0610                     	;# 
   257  0611                     	;# 
   258  0612                     	;# 
   259  0613                     	;# 
   260  0614                     	;# 
   261  0617                     	;# 
   262  0618                     	;# 
   263  0619                     	;# 
   264  061A                     	;# 
   265  061B                     	;# 
   266  061C                     	;# 
   267  0691                     	;# 
   268  0692                     	;# 
   269  0693                     	;# 
   270  0694                     	;# 
   271  0695                     	;# 
   272  0696                     	;# 
   273  0697                     	;# 
   274  0699                     	;# 
   275  069A                     	;# 
   276  0711                     	;# 
   277  0712                     	;# 
   278  0713                     	;# 
   279  0714                     	;# 
   280  0715                     	;# 
   281  0718                     	;# 
   282  0718                     	;# 
   283  0719                     	;# 
   284  071A                     	;# 
   285  071A                     	;# 
   286  071B                     	;# 
   287  071C                     	;# 
   288  071D                     	;# 
   289  0791                     	;# 
   290  0791                     	;# 
   291  0792                     	;# 
   292  0793                     	;# 
   293  0793                     	;# 
   294  0794                     	;# 
   295  0795                     	;# 
   296  0795                     	;# 
   297  0796                     	;# 
   298  0797                     	;# 
   299  0797                     	;# 
   300  0798                     	;# 
   301  0799                     	;# 
   302  079A                     	;# 
   303  080C                     	;# 
   304  080C                     	;# 
   305  080D                     	;# 
   306  080E                     	;# 
   307  080E                     	;# 
   308  080F                     	;# 
   309  0810                     	;# 
   310  0810                     	;# 
   311  0811                     	;# 
   312  0812                     	;# 
   313  0812                     	;# 
   314  0813                     	;# 
   315  0814                     	;# 
   316  0815                     	;# 
   317  0816                     	;# 
   318  0817                     	;# 
   319  0818                     	;# 
   320  0819                     	;# 
   321  081A                     	;# 
   322  081A                     	;# 
   323  081B                     	;# 
   324  081C                     	;# 
   325  081C                     	;# 
   326  081D                     	;# 
   327  088C                     	;# 
   328  088D                     	;# 
   329  088E                     	;# 
   330  088F                     	;# 
   331  088F                     	;# 
   332  0890                     	;# 
   333  0891                     	;# 
   334  0892                     	;# 
   335  0893                     	;# 
   336  0893                     	;# 
   337  0894                     	;# 
   338  0895                     	;# 
   339  0896                     	;# 
   340  0897                     	;# 
   341  0897                     	;# 
   342  0898                     	;# 
   343  0899                     	;# 
   344  0D8C                     	;# 
   345  0D8C                     	;# 
   346  0D8D                     	;# 
   347  0D8E                     	;# 
   348  0D8F                     	;# 
   349  0D8F                     	;# 
   350  0D90                     	;# 
   351  0D91                     	;# 
   352  0D92                     	;# 
   353  0D92                     	;# 
   354  0D93                     	;# 
   355  0D94                     	;# 
   356  0D95                     	;# 
   357  0D95                     	;# 
   358  0D96                     	;# 
   359  0D97                     	;# 
   360  0D98                     	;# 
   361  0D99                     	;# 
   362  0D9A                     	;# 
   363  0D9B                     	;# 
   364  0D9C                     	;# 
   365  0D9D                     	;# 
   366  0D9E                     	;# 
   367  0D9E                     	;# 
   368  0D9F                     	;# 
   369  0DA0                     	;# 
   370  0DA1                     	;# 
   371  0DA1                     	;# 
   372  0DA2                     	;# 
   373  0DA3                     	;# 
   374  0DA4                     	;# 
   375  0DA4                     	;# 
   376  0DA5                     	;# 
   377  0DA6                     	;# 
   378  0DA7                     	;# 
   379  0DA7                     	;# 
   380  0DA8                     	;# 
   381  0DA9                     	;# 
   382  0DAA                     	;# 
   383  0DAB                     	;# 
   384  0DAC                     	;# 
   385  0DAD                     	;# 
   386  0DAE                     	;# 
   387  0DAF                     	;# 
   388  0E0F                     	;# 
   389  0E10                     	;# 
   390  0E11                     	;# 
   391  0E12                     	;# 
   392  0E13                     	;# 
   393  0E14                     	;# 
   394  0E15                     	;# 
   395  0E16                     	;# 
   396  0E17                     	;# 
   397  0E18                     	;# 
   398  0E19                     	;# 
   399  0E1A                     	;# 
   400  0E1B                     	;# 
   401  0E1C                     	;# 
   402  0E1D                     	;# 
   403  0E1E                     	;# 
   404  0E1F                     	;# 
   405  0E20                     	;# 
   406  0E21                     	;# 
   407  0E22                     	;# 
   408  0E23                     	;# 
   409  0E24                     	;# 
   410  0E25                     	;# 
   411  0E26                     	;# 
   412  0E27                     	;# 
   413  0E28                     	;# 
   414  0E29                     	;# 
   415  0E2A                     	;# 
   416  0E2B                     	;# 
   417  0E2C                     	;# 
   418  0E2D                     	;# 
   419  0E2E                     	;# 
   420  0E90                     	;# 
   421  0E91                     	;# 
   422  0E92                     	;# 
   423  0E94                     	;# 
   424  0E95                     	;# 
   425  0E9C                     	;# 
   426  0E9D                     	;# 
   427  0E9E                     	;# 
   428  0E9F                     	;# 
   429  0EA0                     	;# 
   430  0EA1                     	;# 
   431  0EA2                     	;# 
   432  0EA3                     	;# 
   433  0EA4                     	;# 
   434  0EA5                     	;# 
   435  0EA6                     	;# 
   436  0EA7                     	;# 
   437  0F0F                     	;# 
   438  0F10                     	;# 
   439  0F11                     	;# 
   440  0F12                     	;# 
   441  0F13                     	;# 
   442  0F14                     	;# 
   443  0F15                     	;# 
   444  0F16                     	;# 
   445  0F17                     	;# 
   446  0F18                     	;# 
   447  0F19                     	;# 
   448  0F1A                     	;# 
   449  0F1B                     	;# 
   450  0F1C                     	;# 
   451  0F1D                     	;# 
   452  0F1E                     	;# 
   453  0F1F                     	;# 
   454  0F20                     	;# 
   455  0F21                     	;# 
   456  0F22                     	;# 
   457  0F23                     	;# 
   458  0F24                     	;# 
   459  0F25                     	;# 
   460  0F26                     	;# 
   461  0F27                     	;# 
   462  0F28                     	;# 
   463  0F29                     	;# 
   464  0F2A                     	;# 
   465  0F2B                     	;# 
   466  0F2C                     	;# 
   467  0F2D                     	;# 
   468  0F2E                     	;# 
   469  0F2F                     	;# 
   470  0F30                     	;# 
   471  0F31                     	;# 
   472  0F32                     	;# 
   473  0F33                     	;# 
   474  0F34                     	;# 
   475  0F35                     	;# 
   476  0F36                     	;# 
   477  0F37                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489                           
   490                           	psect	cinit
   491  07F6                     start_initialization:	
   492                           ; #config settings
   493                           
   494  07F6                     __initialization:	
   495                           
   496                           ; Clear objects allocated to BANK0
   497  07F6  3047               	movlw	low __pbssBANK0
   498  07F7  0084               	movwf	4
   499  07F8  3000               	movlw	high __pbssBANK0
   500  07F9  0085               	movwf	5
   501  07FA  3014               	movlw	20
   502  07FB  3186  26E8         	fcall	clear_ram0
   503  07FD                     end_of_initialization:	
   504                           ;End of C runtime variable initialization code
   505                           
   506  07FD                     __end_of__initialization:	
   507  07FD  0020               	movlb	0
   508  07FE  3187  2F09         	ljmp	_main	;jump to C main() function
   509                           
   510                           	psect	bssBANK0
   511  0047                     __pbssBANK0:	
   512  0047                     CalcError@F12167:	
   513  0047                     	ds	16
   514  0057                     CalcError@_proportional:	
   515  0057                     	ds	2
   516  0059                     CalcError@integral:	
   517  0059                     	ds	2
   518                           
   519                           	psect	clrtext
   520  06E8                     clear_ram0:	
   521                           ;	Called with FSR0 containing the base address, and
   522                           ;	WREG with the size to clear
   523                           
   524  06E8  0064               	clrwdt	;clear the watchdog before getting into this loop
   525  06E9                     clrloop0:	
   526  06E9  0180               	clrf	0	;clear RAM location pointed to by FSR
   527  06EA  3101               	addfsr 0,1
   528  06EB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   529  06EC  2EE9               	goto	clrloop0	;have we reached the end yet?
   530  06ED  3400               	retlw	0	;all done for this memory range, return
   531                           
   532                           	psect	cstackCOMMON
   533  0070                     __pcstackCOMMON:	
   534  0070                     ?_main:	
   535  0070                     ?___wmul:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?___lwdiv:	
   539                           ; 2 bytes @ 0x0
   540                           
   541  0070                     ___wmul@multiplier:	
   542                           ; 2 bytes @ 0x0
   543                           
   544  0070                     ___lwdiv@divisor:	
   545                           ; 2 bytes @ 0x0
   546                           
   547                           
   548                           ; 2 bytes @ 0x0
   549  0070                     	ds	2
   550  0072                     ___wmul@multiplicand:	
   551  0072                     ___lwdiv@dividend:	
   552                           ; 2 bytes @ 0x2
   553                           
   554                           
   555                           ; 2 bytes @ 0x2
   556  0072                     	ds	2
   557  0074                     ??___wmul:	
   558  0074                     ??___lwdiv:	
   559                           ; 1 bytes @ 0x4
   560                           
   561  0074                     ___wmul@product:	
   562                           ; 1 bytes @ 0x4
   563                           
   564                           
   565                           ; 2 bytes @ 0x4
   566  0074                     	ds	1
   567  0075                     ___lwdiv@quotient:	
   568                           
   569                           ; 2 bytes @ 0x5
   570  0075                     	ds	2
   571  0077                     ___lwdiv@counter:	
   572                           
   573                           ; 1 bytes @ 0x7
   574  0077                     	ds	1
   575  0078                     ??_CalcError:	
   576                           
   577                           ; 1 bytes @ 0x8
   578  0078                     	ds	2
   579  007A                     ??_main:	
   580  007A                     main@asdf:	
   581                           ; 1 bytes @ 0xA
   582                           
   583                           
   584                           ; 2 bytes @ 0xA
   585  007A                     	ds	2
   586                           
   587                           	psect	cstackBANK0
   588  0020                     __pcstackBANK0:	
   589  0020                     ?_CalcError:	
   590                           
   591                           ; 2 bytes @ 0x0
   592  0020                     	ds	8
   593  0028                     CalcError@sensors:	
   594                           
   595                           ; 16 bytes @ 0x8
   596  0028                     	ds	16
   597  0038                     CalcError@position:	
   598                           
   599                           ; 2 bytes @ 0x18
   600  0038                     	ds	2
   601  003A                     CalcError@differential:	
   602                           
   603                           ; 2 bytes @ 0x1A
   604  003A                     	ds	2
   605  003C                     CalcError@error:	
   606                           
   607                           ; 2 bytes @ 0x1C
   608  003C                     	ds	2
   609  003E                     _CalcError$320:	
   610                           
   611                           ; 2 bytes @ 0x1E
   612  003E                     	ds	2
   613  0040                     CalcError@meanSum:	
   614                           
   615                           ; 2 bytes @ 0x20
   616  0040                     	ds	2
   617  0042                     CalcError@sum:	
   618                           
   619                           ; 2 bytes @ 0x22
   620  0042                     	ds	2
   621  0044                     CalcError@proportional:	
   622                           
   623                           ; 2 bytes @ 0x24
   624  0044                     	ds	2
   625  0046                     CalcError@i:	
   626                           
   627                           ; 1 bytes @ 0x26
   628  0046                     	ds	1
   629                           
   630                           	psect	maintext
   631  0709                     __pmaintext:	
   632 ;;
   633 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   634 ;;
   635 ;; *************** function _main *****************
   636 ;; Defined at:
   637 ;;		line 18 in file "main.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  asdf            2   10[COMMON] int 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : B1F/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   652 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   655 ;;Total ram usage:        2 bytes
   656 ;; Hardware stack levels required when called:    2
   657 ;; This function calls:
   658 ;;		_CalcError
   659 ;; This function is called by:
   660 ;;		Startup code after reset
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           
   665                           ;psect for function _main
   666  0709                     _main:	
   667  0709                     l5:	
   668                           ;incstack = 0
   669                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   670                           ;main.c: 20: for(;;){
   671                           
   672                           
   673                           ;main.c: 21: int asdf = 0;
   674  0709  01FA               	clrf	main@asdf
   675  070A  01FB               	clrf	main@asdf+1
   676                           
   677                           ;main.c: 22: asdf = CalcError(1,1,1,1000);
   678  070B  3001               	movlw	1
   679  070C  0020               	movlb	0	; select bank0
   680  070D  00A0               	movwf	?_CalcError
   681  070E  3000               	movlw	0
   682  070F  00A1               	movwf	?_CalcError+1
   683  0710  3001               	movlw	1
   684  0711  00A2               	movwf	?_CalcError+2
   685  0712  3000               	movlw	0
   686  0713  00A3               	movwf	?_CalcError+3
   687  0714  3001               	movlw	1
   688  0715  00A4               	movwf	?_CalcError+4
   689  0716  3000               	movlw	0
   690  0717  00A5               	movwf	?_CalcError+5
   691  0718  30E8               	movlw	232
   692  0719  00A6               	movwf	?_CalcError+6
   693  071A  3003               	movlw	3
   694  071B  00A7               	movwf	?_CalcError+7
   695  071C  3187  2759  3187   	fcall	_CalcError
   696  071F  0020               	movlb	0	; select bank0
   697  0720  0821               	movf	?_CalcError+1,w
   698  0721  00FB               	movwf	main@asdf+1
   699  0722  0820               	movf	?_CalcError,w
   700  0723  00FA               	movwf	main@asdf
   701                           
   702                           ;main.c: 23: }
   703  0724  2F09               	goto	l5
   704  0725                     __end_of_main:	
   705                           
   706                           	psect	text1
   707  0759                     __ptext1:	
   708 ;; *************** function _CalcError *****************
   709 ;; Defined at:
   710 ;;		line 11 in file "mod_correction.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  proportional    2   36[BANK0 ] unsigned int 
   715 ;;  error           2   28[BANK0 ] unsigned int 
   716 ;;  differential    2   26[BANK0 ] unsigned int 
   717 ;;  position        2   24[BANK0 ] unsigned int 
   718 ;;  i               1   38[BANK0 ] unsigned char 
   719 ;;  sensors        16    8[BANK0 ] unsigned int [8]
   720 ;;  sum             2   34[BANK0 ] unsigned int 
   721 ;;  meanSum         2   32[BANK0 ] unsigned int 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  2    0[BANK0 ] int 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   731 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
   732 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
   733 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   734 ;;      Totals:         2      39       0       0       0       0       0       0       0       0       0       0       
      +0       0
   735 ;;Total ram usage:       41 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    1
   738 ;; This function calls:
   739 ;;		___lwdiv
   740 ;;		___wmul
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _CalcError
   748  0759                     _CalcError:	
   749                           
   750                           ;mod_correction.c: 12: unsigned int sensors[]={0,0,0,0,0,0,0,0};
   751                           
   752                           ;incstack = 0
   753                           ; Regs used in _CalcError: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   754  0759  3047               	movlw	low CalcError@F12167
   755  075A  0086               	movwf	6
   756  075B  3000               	movlw	high CalcError@F12167
   757  075C  0087               	movwf	7
   758  075D  3028               	movlw	low CalcError@sensors
   759  075E  0084               	movwf	4
   760  075F  3000               	movlw	high CalcError@sensors
   761  0760  0085               	movwf	5
   762  0761  3010               	movlw	16
   763  0762  00F8               	movwf	??_CalcError
   764  0763                     u270:	
   765  0763  0016               	moviw fsr1++
   766  0764  001A               	movwi fsr0++
   767  0765  0BF8               	decfsz	??_CalcError,f
   768  0766  2F63               	goto	u270
   769                           
   770                           ;mod_correction.c: 13: unsigned int meanSum = 0;
   771  0767  0020               	movlb	0	; select bank0
   772  0768  01C0               	clrf	CalcError@meanSum
   773  0769  01C1               	clrf	CalcError@meanSum+1
   774                           
   775                           ;mod_correction.c: 14: unsigned int sum = 0;
   776  076A  01C2               	clrf	CalcError@sum
   777  076B  01C3               	clrf	CalcError@sum+1
   778                           
   779                           ;mod_correction.c: 15: for (char i = 0; i < 6; i++){
   780  076C  01C6               	clrf	CalcError@i
   781  076D  3006               	movlw	6
   782  076E  0246               	subwf	CalcError@i,w
   783  076F  1803               	btfsc	3,0
   784  0770  2FAC               	goto	l548
   785  0771                     l540:	
   786                           
   787                           ;mod_correction.c: 18: meanSum += sensors[i]*i*1000;
   788  0771  0846               	movf	CalcError@i,w
   789  0772  00F8               	movwf	??_CalcError
   790  0773  01F9               	clrf	??_CalcError+1
   791  0774  0878               	movf	??_CalcError,w
   792  0775  00F0               	movwf	___wmul@multiplier
   793  0776  0879               	movf	??_CalcError+1,w
   794  0777  00F1               	movwf	___wmul@multiplier+1
   795  0778  3546               	lslf	CalcError@i,w
   796  0779  3E28               	addlw	(low (CalcError@sensors| 0))& (0+255)
   797  077A  0086               	movwf	6
   798  077B  0187               	clrf	7
   799  077C  3F40               	moviw [0]fsr1
   800  077D  00F2               	movwf	___wmul@multiplicand
   801  077E  3F41               	moviw [1]fsr1
   802  077F  00F3               	movwf	___wmul@multiplicand+1
   803  0780  3186  26EE  3187   	fcall	___wmul
   804  0783  0871               	movf	?___wmul+1,w
   805  0784  0020               	movlb	0	; select bank0
   806  0785  00BF               	movwf	_CalcError$320+1
   807  0786  0870               	movf	?___wmul,w
   808  0787  00BE               	movwf	_CalcError$320
   809                           
   810                           ;mod_correction.c: 18: meanSum += sensors[i]*i*1000;
   811  0788  083F               	movf	_CalcError$320+1,w
   812  0789  00F1               	movwf	___wmul@multiplier+1
   813  078A  083E               	movf	_CalcError$320,w
   814  078B  00F0               	movwf	___wmul@multiplier
   815  078C  30E8               	movlw	232
   816  078D  00F2               	movwf	___wmul@multiplicand
   817  078E  3003               	movlw	3
   818  078F  00F3               	movwf	___wmul@multiplicand+1
   819  0790  3186  26EE  3187   	fcall	___wmul
   820  0793  0870               	movf	?___wmul,w
   821  0794  0020               	movlb	0	; select bank0
   822  0795  07C0               	addwf	CalcError@meanSum,f
   823  0796  0871               	movf	?___wmul+1,w
   824  0797  3DC1               	addwfc	CalcError@meanSum+1,f
   825                           
   826                           ;mod_correction.c: 19: sum += sensors[i];
   827  0798  3546               	lslf	CalcError@i,w
   828  0799  3E28               	addlw	(low (CalcError@sensors| 0))& (0+255)
   829  079A  0086               	movwf	6
   830  079B  0187               	clrf	7
   831  079C  3F40               	moviw [0]fsr1
   832  079D  00F8               	movwf	??_CalcError
   833  079E  3F41               	moviw [1]fsr1
   834  079F  00F9               	movwf	??_CalcError+1
   835  07A0  0878               	movf	??_CalcError,w
   836  07A1  07C2               	addwf	CalcError@sum,f
   837  07A2  0879               	movf	??_CalcError+1,w
   838  07A3  3DC3               	addwfc	CalcError@sum+1,f
   839  07A4  3001               	movlw	1
   840  07A5  00F8               	movwf	??_CalcError
   841  07A6  0878               	movf	??_CalcError,w
   842  07A7  07C6               	addwf	CalcError@i,f
   843  07A8  3006               	movlw	6
   844  07A9  0246               	subwf	CalcError@i,w
   845  07AA  1C03               	skipc
   846  07AB  2F71               	goto	l540
   847  07AC                     l548:	
   848                           
   849                           ;mod_correction.c: 20: }
   850                           ;mod_correction.c: 21: if (sum!=0){
   851  07AC  0842               	movf	CalcError@sum,w
   852  07AD  0443               	iorwf	CalcError@sum+1,w
   853  07AE  1903               	btfsc	3,2
   854  07AF  2FF1               	goto	l568
   855                           
   856                           ;mod_correction.c: 22: unsigned int position = meanSum/sum;
   857  07B0  0843               	movf	CalcError@sum+1,w
   858  07B1  00F1               	movwf	___lwdiv@divisor+1
   859  07B2  0842               	movf	CalcError@sum,w
   860  07B3  00F0               	movwf	___lwdiv@divisor
   861  07B4  0841               	movf	CalcError@meanSum+1,w
   862  07B5  00F3               	movwf	___lwdiv@dividend+1
   863  07B6  0840               	movf	CalcError@meanSum,w
   864  07B7  00F2               	movwf	___lwdiv@dividend
   865  07B8  3187  2725  3187   	fcall	___lwdiv
   866  07BB  0871               	movf	?___lwdiv+1,w
   867  07BC  0020               	movlb	0	; select bank0
   868  07BD  00B9               	movwf	CalcError@position+1
   869  07BE  0870               	movf	?___lwdiv,w
   870  07BF  00B8               	movwf	CalcError@position
   871                           
   872                           ;mod_correction.c: 23: unsigned int proportional = position - 3500;
   873  07C0  0838               	movf	CalcError@position,w
   874  07C1  3E54               	addlw	84
   875  07C2  00C4               	movwf	CalcError@proportional
   876  07C3  30F2               	movlw	242
   877  07C4  3D39               	addwfc	CalcError@position+1,w
   878  07C5  00C5               	movwf	CalcError@proportional+1
   879                           
   880                           ;mod_correction.c: 24: static unsigned int _proportional = 0;
   881                           ;mod_correction.c: 25: static unsigned int integral = 0;
   882                           ;mod_correction.c: 26: integral += proportional;
   883  07C6  0844               	movf	CalcError@proportional,w
   884  07C7  07D9               	addwf	CalcError@integral,f
   885  07C8  0845               	movf	CalcError@proportional+1,w
   886  07C9  3DDA               	addwfc	CalcError@integral+1,f
   887                           
   888                           ;mod_correction.c: 27: unsigned int differential = proportional - _proportional;
   889  07CA  0957               	comf	CalcError@_proportional,w
   890  07CB  00F8               	movwf	??_CalcError
   891  07CC  0958               	comf	CalcError@_proportional+1,w
   892  07CD  00F9               	movwf	??_CalcError+1
   893  07CE  0AF8               	incf	??_CalcError,f
   894  07CF  1903               	skipnz
   895  07D0  0AF9               	incf	??_CalcError+1,f
   896  07D1  0844               	movf	CalcError@proportional,w
   897  07D2  0778               	addwf	??_CalcError,w
   898  07D3  00BA               	movwf	CalcError@differential
   899  07D4  0845               	movf	CalcError@proportional+1,w
   900  07D5  3D79               	addwfc	??_CalcError+1,w
   901  07D6  00BB               	movwf	CalcError@differential+1
   902                           
   903                           ;mod_correction.c: 28: unsigned int error = 1*+1*integral+1*differential;
   904  07D7  083A               	movf	CalcError@differential,w
   905  07D8  0759               	addwf	CalcError@integral,w
   906  07D9  00BC               	movwf	CalcError@error
   907  07DA  083B               	movf	CalcError@differential+1,w
   908  07DB  3D5A               	addwfc	CalcError@integral+1,w
   909  07DC  00BD               	movwf	CalcError@error+1
   910                           
   911                           ;mod_correction.c: 29: _proportional = proportional;
   912  07DD  0845               	movf	CalcError@proportional+1,w
   913  07DE  00D8               	movwf	CalcError@_proportional+1
   914  07DF  0844               	movf	CalcError@proportional,w
   915  07E0  00D7               	movwf	CalcError@_proportional
   916                           
   917                           ;mod_correction.c: 30: return error/1000;
   918  07E1  30E8               	movlw	232
   919  07E2  00F0               	movwf	___lwdiv@divisor
   920  07E3  3003               	movlw	3
   921  07E4  00F1               	movwf	___lwdiv@divisor+1
   922  07E5  083D               	movf	CalcError@error+1,w
   923  07E6  00F3               	movwf	___lwdiv@dividend+1
   924  07E7  083C               	movf	CalcError@error,w
   925  07E8  00F2               	movwf	___lwdiv@dividend
   926  07E9  3187  2725         	fcall	___lwdiv
   927  07EB  0871               	movf	?___lwdiv+1,w
   928  07EC  0020               	movlb	0	; select bank0
   929  07ED  00A1               	movwf	?_CalcError+1
   930  07EE  0870               	movf	?___lwdiv,w
   931  07EF  00A0               	movwf	?_CalcError
   932                           
   933                           ;mod_correction.c: 31: }
   934  07F0  0008               	return
   935  07F1                     l568:	
   936                           
   937                           ;mod_correction.c: 32: else{
   938                           ;mod_correction.c: 33: return -1;
   939  07F1  30FF               	movlw	255
   940  07F2  00A0               	movwf	?_CalcError
   941  07F3  30FF               	movlw	255
   942  07F4  00A1               	movwf	?_CalcError+1
   943  07F5  0008               	return
   944  07F6                     __end_of_CalcError:	
   945                           
   946                           	psect	text2
   947  06EE                     __ptext2:	
   948 ;; *************** function ___wmul *****************
   949 ;; Defined at:
   950 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  multiplier      2    0[COMMON] unsigned int 
   953 ;;  multiplicand    2    2[COMMON] unsigned int 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  product         2    4[COMMON] unsigned int 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  2    0[COMMON] unsigned int 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   965 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   966 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   968 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   969 ;;Total ram usage:        6 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_CalcError
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function ___wmul
   980  06EE                     ___wmul:	
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   984  06EE  01F4               	clrf	___wmul@product
   985  06EF  01F5               	clrf	___wmul@product+1
   986  06F0                     l490:	
   987  06F0  1C70               	btfss	___wmul@multiplier,0
   988  06F1  2EF6               	goto	l24
   989  06F2  0872               	movf	___wmul@multiplicand,w
   990  06F3  07F4               	addwf	___wmul@product,f
   991  06F4  0873               	movf	___wmul@multiplicand+1,w
   992  06F5  3DF5               	addwfc	___wmul@product+1,f
   993  06F6                     l24:	
   994  06F6  3001               	movlw	1
   995  06F7                     u175:	
   996  06F7  35F2               	lslf	___wmul@multiplicand,f
   997  06F8  0DF3               	rlf	___wmul@multiplicand+1,f
   998  06F9  0B89               	decfsz	9,f
   999  06FA  2EF7               	goto	u175
  1000  06FB  3001               	movlw	1
  1001  06FC                     u185:	
  1002  06FC  36F1               	lsrf	___wmul@multiplier+1,f
  1003  06FD  0CF0               	rrf	___wmul@multiplier,f
  1004  06FE  0B89               	decfsz	9,f
  1005  06FF  2EFC               	goto	u185
  1006  0700  0870               	movf	___wmul@multiplier,w
  1007  0701  0471               	iorwf	___wmul@multiplier+1,w
  1008  0702  1D03               	btfss	3,2
  1009  0703  2EF0               	goto	l490
  1010  0704  0875               	movf	___wmul@product+1,w
  1011  0705  00F1               	movwf	?___wmul+1
  1012  0706  0874               	movf	___wmul@product,w
  1013  0707  00F0               	movwf	?___wmul
  1014  0708  0008               	return
  1015  0709                     __end_of___wmul:	
  1016                           
  1017                           	psect	text3
  1018  0725                     __ptext3:	
  1019 ;; *************** function ___lwdiv *****************
  1020 ;; Defined at:
  1021 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  divisor         2    0[COMMON] unsigned int 
  1024 ;;  dividend        2    2[COMMON] unsigned int 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  quotient        2    5[COMMON] unsigned int 
  1027 ;;  counter         1    7[COMMON] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  2    0[COMMON] unsigned int 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1038 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1040 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1041 ;;Total ram usage:        8 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_CalcError
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           
  1051                           ;psect for function ___lwdiv
  1052  0725                     ___lwdiv:	
  1053                           
  1054                           ;incstack = 0
  1055                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1056  0725  01F5               	clrf	___lwdiv@quotient
  1057  0726  01F6               	clrf	___lwdiv@quotient+1
  1058  0727  0870               	movf	___lwdiv@divisor,w
  1059  0728  0471               	iorwf	___lwdiv@divisor+1,w
  1060  0729  1903               	btfsc	3,2
  1061  072A  2F54               	goto	l524
  1062  072B  01F7               	clrf	___lwdiv@counter
  1063  072C  0AF7               	incf	___lwdiv@counter,f
  1064  072D                     l512:	
  1065  072D  1BF1               	btfsc	___lwdiv@divisor+1,7
  1066  072E  2F39               	goto	l514
  1067  072F  3001               	movlw	1
  1068  0730                     u215:	
  1069  0730  35F0               	lslf	___lwdiv@divisor,f
  1070  0731  0DF1               	rlf	___lwdiv@divisor+1,f
  1071  0732  0B89               	decfsz	9,f
  1072  0733  2F30               	goto	u215
  1073  0734  3001               	movlw	1
  1074  0735  00F4               	movwf	??___lwdiv
  1075  0736  0874               	movf	??___lwdiv,w
  1076  0737  07F7               	addwf	___lwdiv@counter,f
  1077  0738  2F2D               	goto	l512
  1078  0739                     l514:	
  1079  0739  3001               	movlw	1
  1080  073A                     u235:	
  1081  073A  35F5               	lslf	___lwdiv@quotient,f
  1082  073B  0DF6               	rlf	___lwdiv@quotient+1,f
  1083  073C  0B89               	decfsz	9,f
  1084  073D  2F3A               	goto	u235
  1085  073E  0871               	movf	___lwdiv@divisor+1,w
  1086  073F  0273               	subwf	___lwdiv@dividend+1,w
  1087  0740  1D03               	skipz
  1088  0741  2F44               	goto	u245
  1089  0742  0870               	movf	___lwdiv@divisor,w
  1090  0743  0272               	subwf	___lwdiv@dividend,w
  1091  0744                     u245:	
  1092  0744  1C03               	skipc
  1093  0745  2F4B               	goto	l520
  1094  0746  0870               	movf	___lwdiv@divisor,w
  1095  0747  02F2               	subwf	___lwdiv@dividend,f
  1096  0748  0871               	movf	___lwdiv@divisor+1,w
  1097  0749  3BF3               	subwfb	___lwdiv@dividend+1,f
  1098  074A  1475               	bsf	___lwdiv@quotient,0
  1099  074B                     l520:	
  1100  074B  3001               	movlw	1
  1101  074C                     u255:	
  1102  074C  36F1               	lsrf	___lwdiv@divisor+1,f
  1103  074D  0CF0               	rrf	___lwdiv@divisor,f
  1104  074E  0B89               	decfsz	9,f
  1105  074F  2F4C               	goto	u255
  1106  0750  3001               	movlw	1
  1107  0751  02F7               	subwf	___lwdiv@counter,f
  1108  0752  1D03               	btfss	3,2
  1109  0753  2F39               	goto	l514
  1110  0754                     l524:	
  1111  0754  0876               	movf	___lwdiv@quotient+1,w
  1112  0755  00F1               	movwf	?___lwdiv+1
  1113  0756  0875               	movf	___lwdiv@quotient,w
  1114  0757  00F0               	movwf	?___lwdiv
  1115  0758  0008               	return
  1116  0759                     __end_of___lwdiv:	
  1117  007E                     btemp	set	126	;btemp
  1118  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     39      59
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_CalcError
    _CalcError->___lwdiv

Critical Paths under _main in BANK0

    _main->_CalcError

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1068
                                             10 COMMON     2     2      0
                          _CalcError
 ---------------------------------------------------------------------------------
 (1) _CalcError                                           41    33      8    1066
                                              8 COMMON     2     2      0
                                              0 BANK0     39    31      8
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcError
     ___lwdiv
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      3B       5       73.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      47      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      47      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Feb 10 11:23:19 2017

                      l5 0709           CalcError@error 003C                       l24 06F6  
    ___wmul@multiplicand 0072                      l520 074B                      l512 072D  
                    l514 0739                      l524 0754                      l540 0771  
                    l490 06F0                      l548 07AC                      l568 07F1  
                    u215 0730                      u235 073A                      u245 0744  
                    u270 0763                      u255 074C                      u175 06F7  
                    u185 06FC         CalcError@meanSum 0040                      wreg 0009  
       CalcError@sensors 0028                     _main 0709                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 0002  
      CalcError@integral 0059        CalcError@position 0038                    ?_main 0070  
        __end_of___lwdiv 0759            _CalcError$320 003E                    status 0003  
                  wtemp0 007E       __size_of_CalcError 009D          __initialization 07F6  
           __end_of_main 0725                   ??_main 007A                   ___wmul 06EE  
              ??___lwdiv 0074        __end_of_CalcError 07F6  __end_of__initialization 07FD  
           CalcError@sum 0042           __pcstackCOMMON 0070               __pbssBANK0 0047  
             __pmaintext 0709                  ?___wmul 0070    CalcError@proportional 0044  
        __size_of___wmul 001B                  ___lwdiv 0725                  __ptext1 0759  
                __ptext2 06EE                  __ptext3 0725                  clrloop0 06E9  
   end_of_initialization 07FD                _CalcError 0759   CalcError@_proportional 0057  
         __end_of___wmul 0709      start_initialization 07F6               ?_CalcError 0020  
               ??___wmul 0074                ___latbits 0002            __pcstackBANK0 0020  
  CalcError@differential 003A         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
       ___lwdiv@quotient 0075              ??_CalcError 0078           ___wmul@product 0074  
              clear_ram0 06E8        ___wmul@multiplier 0070               CalcError@i 0046  
       __size_of___lwdiv 0034          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
          __size_of_main 001C                 main@asdf 007A          CalcError@F12167 0047  
